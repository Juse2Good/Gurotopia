class GetItemManager {
public:
	static int Serialize() {
		string n_ = "database/items.dat";
		ifstream file(n_, ios::binary | ios::ate);
		__int64 size = file.tellg();
		if (size == -1) return -1;
		Environment()->ItemsDat_Size = (int)size;
		char* data = new char[size];
		file.seekg(0, ios::beg);
		file.read((char*)(data), size);
		Environment()->ItemsDat = new BYTE[60 + size];
		int MessageType = 0x4, PacketType = 0x10, NetID = -1, CharState = 0x8;
		memset(Environment()->ItemsDat, 0, 60);
		memcpy(Environment()->ItemsDat, &MessageType, 4);
		memcpy(Environment()->ItemsDat + 4, &PacketType, 4);
		memcpy(Environment()->ItemsDat + 8, &NetID, 4);
		memcpy(Environment()->ItemsDat + 16, &CharState, 4);
		memcpy(Environment()->ItemsDat + 56, &size, 4);
		file.seekg(0, std::ios::beg);
		file.read((char*)(Environment()->ItemsDat + 60), size);
		Environment()->ItemsDat_Hash = get_hash((unsigned char*)data, (const int)size);
		int memPos = 0, itemCount;
		int16_t itemsdatVersion = 0;
		memcpy(&itemsdatVersion, data + memPos, 1);
		memPos += 2;
		memcpy(&itemCount, data + memPos, 4);
		const string key_ = "PBG892FXX982ABC*";
		memPos += 4;
		for (int i = 0; i < itemCount; i++) {
			ItemDB def;
			memcpy(&def.id, data + memPos, 4);
			memPos += 4;
			def.editableType = data[memPos];
			if (def.editableType == 3 || def.editableType == 31 || def.editableType == 1 || def.editableType == 21 || def.editableType == 23) {
				def.multiple_sides = 1;
			}
			memPos += 1;
			def.itemCategory = data[memPos];
			memPos += 1;
			def.actionType = data[memPos];
			if (def.actionType == 12 or def.actionType == 119 or def.actionType == 45 or def.actionType == 32 or def.actionType == 31 or def.actionType == 122 or def.actionType == 36 or def.actionType == 18) {
				if (def.actionType == 31 || def.actionType == 36 || def.actionType == 12 || def.actionType == 18 || def.id == 11692) {
					def.can_be_changed_to_public = 1;
				}
				def.toggleable = 1;
			}
			memPos += 1;
			def.hitSoundType = data[memPos];
			memPos += 1;
			int16_t strLen = *(int16_t*)&data[memPos];
			memPos += 2;
			for (int j = 0; j < strLen; j++) {
				def.name += data[memPos] ^ (key_[(j + def.id) % key_.length()]);
				memPos++;
			}
			strLen = *(int16_t*)&data[memPos];
			memPos += 2;
			for (int j = 0; j < strLen; j++) {
				def.texture += data[memPos];
				memPos++;
			}
			memcpy(&def.textureHash, data + memPos, 4);
			memPos += 4;
			def.itemKind = memPos[data];
			memPos += 1;
			memcpy(&def.val1, data + memPos, 4);
			memPos += 4;
			def.textureX = data[memPos];
			memPos += 1;
			def.textureY = data[memPos];
			memPos += 1;
			def.spreadType = data[memPos];
			memPos += 1;
			def.isStripeyWallpaper = data[memPos];
			memPos += 1;
			def.collisionType = data[memPos];
			if (def.collisionType == 1) {
				def.solid = 1;
			}
			memPos += 1;
			def.breakHits = data[memPos];
			if (def.breakHits <= 0 or def.breakHits > 42 * 6) {
				def.breakHits = 42 * 6;
			}
			memPos += 1;
			memcpy(&def.dropChance, data + memPos, 4);
			memPos += 4;
			def.clothingType = data[memPos];
			memPos += 1;
			memcpy(&def.rarity, data + memPos, 2);
			memPos += 2;
			def.maxAmount = data[memPos];
			memPos += 1;
			strLen = *(int16_t*)&data[memPos];
			memPos += 2;
			for (int j = 0; j < strLen; j++) {
				def.extraFile += data[memPos];
				memPos++;
			}
			if (def.extraFile.find("mp3") != string::npos) def.musical_block = true;
			memcpy(&def.extraFileHash, data + memPos, 4);
			memPos += 4;
			memcpy(&def.base_weather, data + memPos, 4);
			memPos += 4;
			strLen = *(int16_t*)&data[memPos];
			memPos += 2;
			for (int j = 0; j < strLen; j++) {
				def.petName += data[memPos];
				memPos++;
			}
			strLen = *(int16_t*)&data[memPos];
			memPos += 2;
			for (int j = 0; j < strLen; j++) {
				def.petPrefix += data[memPos];
				memPos++;
			}
			strLen = *(int16_t*)&data[memPos];
			memPos += 2;
			for (int j = 0; j < strLen; j++) {
				def.petSuffix += data[memPos];
				memPos++;
			}
			strLen = *(int16_t*)&data[memPos];
			memPos += 2;
			for (int j = 0; j < strLen; j++) {
				def.petAbility += data[memPos];
				memPos++;
			}
			def.seedBase = data[memPos];
			memPos += 1;
			def.seedOverlay = data[memPos];
			memPos += 1;
			def.treeBase = data[memPos];
			memPos += 1;
			def.treeLeaves = data[memPos];
			memPos += 1;
			memcpy(&def.seedColor, data + memPos, 4);
			memPos += 4;
			memcpy(&def.seedOverlayColor, data + memPos, 4);
			memPos += 4;
			memPos += 4;
			memcpy(&def.growTime, data + memPos, 4);
			memPos += 4;
			memcpy(&def.val2, data + memPos, 2);
			memPos += 2;
			memcpy(&def.isRayman, data + memPos, 2);
			memPos += 2;
			strLen = *(int16_t*)&data[memPos];
			memPos += 2;
			for (int j = 0; j < strLen; j++) {
				def.extraOptions += data[memPos];
				memPos++;
			}
			strLen = *(int16_t*)&data[memPos];
			memPos += 2;
			for (int j = 0; j < strLen; j++) {
				def.texture2 += data[memPos];
				memPos++;
			}
			strLen = *(int16_t*)&data[memPos];
			memPos += 2;
			for (int j = 0; j < strLen; j++) {
				def.extraOptions2 += data[memPos];
				memPos++;
			}
			memPos += 80;
			if (itemsdatVersion >= 11) {
				strLen = *(int16_t*)&data[memPos];
				memPos += 2;
				for (int j = 0; j < strLen; j++) {
					def.punchOptions += data[memPos];
					memPos++;
				}
			}
			if (itemsdatVersion >= 12) memPos += 13;
			if (itemsdatVersion >= 13) memPos += 4;
			if (itemsdatVersion >= 14) memPos += 4;
			if (itemsdatVersion >= 15) {
				memPos += 25;
				int16_t strLen = *(int16_t*)&data[memPos];
				memPos += 2 + strLen;
			}
			if (itemsdatVersion >= 16) {
				int16_t jLen_ = *(int16_t*)&data[memPos];
				memPos += 2 + jLen_;
			}
			if (itemsdatVersion >= 17) memPos += 4;
			if (itemsdatVersion >= 18) memPos += 4;
			if (itemsdatVersion >= 19) memPos += 9;
			if (i != def.id) {
				return -1;
			}
			string category = getItemCategory(def.actionType, def.name);
			if (def.actionType == 127 || def.actionType == 126 || def.actionType == 118 || def.actionType == 117 || def.actionType == 116 || def.actionType == 115 || def.actionType == 113 || def.actionType == 106 || def.actionType == 105 || def.actionType == 104 || def.actionType == 102 || def.actionType == 99 || def.actionType == 96 || def.actionType == 86 || def.actionType == 79 || def.actionType == 75 || def.actionType == 71 || def.actionType == 68 || def.actionType == 66 || def.actionType == 65 || def.actionType == 53 || def.actionType == 52 || def.actionType == 50 || def.actionType == 43 || def.actionType == 91 || def.id == 5820) def.blocked_place = true;
			if (def.actionType == 77) def.battle_cage = 1;
			if (def.id == 3832 || def.id == 6016 || def.id == 1436 || def.id == 14548 || def.id == 8246 || def.id == 10258 || def.id == 2646 || def.id == 3202) def.blocked_place = false;
			if (def.blocked_place) def.simple_load = true;
			if (def.id == 4632 or def.id == 4630) { def.audio_rack = true; def.simple_load = false; def.blocked_place = false; }
			string clothingType_ = "";
			if (def.actionType == 107) {
				category = "Clothing";
				clothingType_ = "Ances";
			}
			if (def.actionType == 20) {
				switch (def.clothingType) {
				case 0: clothingType_ = "Hair";
					break;
				case 1: clothingType_ = "Shirt";
					break;
				case 2: clothingType_ = "Pants";
					break;
				case 3: clothingType_ = "Feet";
					break;
				case 4: clothingType_ = "Face";
					break;
				case 5: clothingType_ = "Hand";
					break;
				case 6: clothingType_ = "Back";
					break;
				case 7: clothingType_ = "Mask";
					break;
				case 8: clothingType_ = "Necklace";
					break;
				case 9: clothingType_ = "Ances";
					break;
				default: break;
				}
			}
			if ((def.id % 2) == 1) category = "Seed";
			vector<string> prop_ = get_properties(def.actionType, def.itemCategory);
			string thisss = (prop_.empty() ? "0" : join(prop_, ','));
			vector<string> properties = explode(",", thisss);
			def.properties = Property_Zero;
			for (string& prop : properties) {
				if (prop == "NoSeed") {
					def.properties += Property_NoSeed;
				} if (prop == "Dropless") {
					def.properties += Property_Dropless;
				} if (prop == "Beta") {
					def.properties += Property_Beta;
				} if (prop == "Mod") {
					def.properties += Property_Mod;
				} if (prop == "Untradable") {
					def.properties += Property_Untradable;
					def.untradeable = 1;
				} if (prop == "Wrenchable") {
					def.properties += Property_Wrenchable;
				} if (prop == "MultiFacing") {
					def.properties += Property_MultiFacing;
				} if (prop == "Permanent") {
					def.properties += Property_Permanent;
				} if (prop == "AutoPickup") {
					def.properties += Property_AutoPickup;
				} if (prop == "WorldLock") {
					def.properties += Property_WorldLock;
				} if (prop == "NoSelf") {
					def.properties += Property_NoSelf;
				} if (prop == "RandomGrow") {
					def.properties += Property_RandomGrow;
				} if (prop == "Public" && def.id != 6852) {
					def.properties += Property_Public;
				} if (prop == "Foreground") {
					def.properties += Property_Foreground;
				} if (prop == "OnlyCombiner") {
					def.properties += Property_Chemical;
				}
			}
			if (def.id == 9570) def.properties += Property_Mod;
			if (def.id == 9828) def.properties = Property_Zero;
			if (def.id == 5926 || def.id == 12958 || def.id == 9862 || def.id == 9866 || def.id == 9868 || def.id == 9920 || def.id == 7188 || def.id == 10018 || def.id == 10120 || def.id == 10122 || def.id == 10124 || def.id == 10118) {
				def.untradeable = 0;
				def.properties &= ~Property_Untradable;
			}
			if (def.id == 14596 || def.id == 2950 || def.id == 9772 || def.id == 5930 || def.id == 9770 || def.id == 9778 || def.id == 14516 || def.id == 14518 || def.id == 14520 || def.id == 14522 || def.id == 14524 || def.id == 5136 || def.id == 14084 || def.id == 7960 || def.id == 9726 || def.id == 10934 || def.id == 14562 || def.id == 10384 || def.id == 9846 || def.id == 9774 || def.id == 8430 || def.id == 9852 || def.id == 9854 || def.id == 9882 || def.id == 9896 || def.id == 10372 || def.id == 10400) {
				def.untradeable = 1;
				def.properties += Property_Untradable;
			}
			def.blockType = get_blocktype(category, def.name);
			if (def.id == 11138) {
				def.blockType = VIP_ENTRANCE;
			}
			else if (def.id == 6954) {
				def.blockType = SUCKER;
			}
			else if (def.id == 10258 || def.id == 1436 || def.id == 8246) {
				def.blockType = CCTV;
			}
			else if (def.actionType == 81 or def.id == 5958 or def.id == 12054) {
				def.blockType = WEATHER;
			}
			if (def.blockType == GAME_BLOCK or def.blockType == GAME_GENERATOR) { def.simple_load = false; def.blocked_place = false; }
			if (i == 3578) {
				//items[i].clothingType = 9;
				//clothingType_ = "Ances";
			}
			def.clothType = get_clothtype(clothingType_, def.blockType);
			def.effect = get_punch_id(def.id);
			def.ori_name = fixchar2(def.name);
			items.push_back(def);
			if (items[def.id].properties & Property_RandomGrow) {
				if (def.name.find("Tangram Block") != string::npos)
					items[def.id].name = (def.name.find("Seed") != string::npos ? "Tangram Block Seed" : "Tangram Block");
				else if (def.name.find("Card Block") != string::npos)
					items[def.id].name = (def.name.find("Seed") != string::npos ? "Card Block Seed" : "Card Block");
				else if (def.name.find("Growsaber") != string::npos)
					items[def.id].name = (def.name.find("Seed") != string::npos ? "Growsaber Seed" : "Growsaber");
				else if (def.name.find("Surgical") != string::npos)
					items[def.id].name = (def.name.find("Seed") != string::npos ? "Surgical Tool Seed" : "Surgical Tool");
				else if (def.name.find("Super Shirt") != string::npos)
					items[def.id].name = (def.name.find("Seed") != string::npos ? "Super Shirt Seed" : "Super Shirt");
				else if (def.name.find("Muscle Shirt") != string::npos)
					items[def.id].name = (def.name.find("Seed") != string::npos ? "Muscle Shirt Seed" : "Muscle Shirt");
				else if (def.name.find("Heroic Tights") != string::npos)
					items[def.id].name = (def.name.find("Seed") != string::npos ? "Heroic Tights Seed" : "Heroic Tights");
				else if (def.name.find("Super Tights") != string::npos)
					items[def.id].name = (def.name.find("Seed") != string::npos ? "Super Tights Seed" : "Super Tights");
				else if (def.name.find("Heroic Boots") != string::npos)
					items[def.id].name = (def.name.find("Seed") != string::npos ? "Heroic Boots Seed" : "Heroic Boots");
				else if (def.name.find("Superhero Mask") != string::npos)
					items[def.id].name = (def.name.find("Seed") != string::npos ? "Superhero Mask Seed" : "Superhero Mask");
				else if (def.name.find("Crimefighter Mask") != string::npos)
					items[def.id].name = (def.name.find("Seed") != string::npos ? "Crimefighter Mask Seed" : "Crimefighter Mask");
				else if (def.name.find("Super Cape") != string::npos)
					items[def.id].name = (def.name.find("Seed") != string::npos ? "Super Cape Seed" : "Super Cape");
				else if (def.name.find("Superheroine Top") != string::npos)
					items[def.id].name = (def.name.find("Seed") != string::npos ? "Superheroine Top Seed" : "Superheroine Top");
				else if (def.name.find("Super Eye Mask") != string::npos)
					items[def.id].name = (def.name.find("Seed") != string::npos ? "Super Eye Seed" : "Super Eye");
				else if (def.name.find("Super Logo") != string::npos)
					items[def.id].name = (def.name.find("Seed") != string::npos ? "Super Logo Seed" : "Super Logo");
				else if (def.name.find("Superpower") != string::npos)
					items[def.id].name = (def.name.find("Seed") != string::npos ? "Superpower Seed" : "Superpower");
				else if (def.name.find("Villain Portrait") != string::npos)
					items[def.id].name = (def.name.find("Seed") != string::npos ? "Villain Portrait Seed" : "Villain Portrait");
				else if (def.name.find("Super Logo") != string::npos)
					items[def.id].name = (def.name.find("Seed") != string::npos ? "Super Logo Seed" : "Super Logo");
				else if (def.name.find("Fashionable Dress") != string::npos)
					items[def.id].name = (def.name.find("Seed") != string::npos ? "Fashionable Dress Seed" : "Fashionable Dress");
				else if (def.name.find("Stylin' Dress") != string::npos)
					items[def.id].name = (def.name.find("Seed") != string::npos ? "Stylin' Dress Seed" : "Stylin' Dress");
				else if (def.name.find("High Heels") != string::npos)
					items[def.id].name = (def.name.find("Seed") != string::npos ? "High Heels Seed" : "High Heels");
				else if (def.name.find("Fashion Purse") != string::npos)
					items[def.id].name = (def.name.find("Seed") != string::npos ? "Fashion Purse Seed" : "Fashion Purse");
				else if (def.name.find("Number Block") != string::npos)
					items[def.id].name = (def.name.find("Seed") != string::npos ? "Number Block Seed" : "Number Block");
				else if (def.name.find("Number") != string::npos)
					items[def.id].name = (def.name.find("Seed") != string::npos ? "Number Seed" : "Number");
				else if (def.name.find("Paint Bucket") != string::npos)
					items[def.id].name = (def.name.find("Seed") != string::npos ? "Paint Bucket Seed" : "Paint Bucket");
				else if (def.name.find("Crayon") != string::npos)
					items[def.id].name = (def.name.find("Seed") != string::npos ? "Crayon Block Seed" : "Crayon Block");
				else if (def.name.find("Command") != string::npos)
					items[def.id].name = (def.name.find("Seed") != string::npos ? "Command Tool Seed" : "Command Tool");
				else if (def.name.find("Growmoji") != string::npos)
					items[def.id].name = (def.name.find("Seed") != string::npos ? "Growmoji Seed" : "Growmoji");
				else if (def.name.find("Guild Flag") != string::npos)
					items[def.id].name = (def.name.find("Seed") != string::npos ? "Guild Flag Seed" : "Guild Flag");
				else {
					int a_ = 0;
					int last_id = 0;
					while (items[def.id - a_].properties & Property_RandomGrow) {
						if (items[def.id - a_].blockType != BlockTypes::SEED) last_id = def.id - a_;
						a_++;
					}
					items[def.id].name = (def.name.find("Seed") != string::npos ? items[last_id + 1].name : items[last_id].name);
				}
			}
			if (i == 9266) {
				items[i].max_gems3 = 500;
				items[i].clash_token = 10;
			}
			if (i == 6856) {
				items[i].max_gems3 = 100;
				items[i].clash_token = 10;
			}
			if (i == 6858) {
				items[i].max_gems3 = 200;
				items[i].clash_token = 10;
			}
			if (i == 6860) {
				items[i].max_gems3 = 4000;
				items[i].clash_token = 70;
			}
			if (i == 8188 || i == 6862 || i == 8188) {
				items[i].max_gems3 = 9600;
				items[i].clash_token = 70;
			}
			if (i == 6142 || i == 1240 || items[i].actionType == -115 || i == 9080) items[i].multiple_sides = 1;
			if (i == 834 || i == 611 || i == 914 || i == 916 || i == 918 || i == 920 || i == 874)items[i].max_gems3 = 1;
			if (i == 202)items[i].max_gems3 = 5;
			if (i == 838 || i == 840 || i == 844 || i == 390 || i == 540 || i == 922 || i == 388 || i == 386)items[i].max_gems3 = 10;
			if (i == 204) items[i].max_gems3 = 20;
			if (i == 8534)items[i].max_gems3 = 25;
			if (i == 720 || i == 206 || i == 528 || i == 8500) items[i].max_gems3 = 50;
			if (i == 366 || i == 932 || i == 542 || i == 882)items[i].max_gems3 = 100;
			if (i == 710)items[i].max_gems3 = 200;
			if (i == 930 || i == 768 || i == 672 || i == 830 || i == 1008 || i == 8542)items[i].max_gems3 = 250;
			if (i == 242)items[i].max_gems3 = 300;
			if (i == 1240)items[i].max_gems3 = 400;
			if (i == 362 || i == 692)items[i].max_gems3 = 500;
			if (i == 898) items[i].max_gems3 = 750;
			if (i == 946 || i == 934 || i == 984 || i == 276 || i == 274 || i == 408 || i == 11432 || i == 4490)items[i].max_gems3 = 1000;
			if (i == 10394) items[i].max_gems3 = 1000;
			if (i == 574 || i == 592 || i == 766 || i == 760 || i == 1012) items[i].max_gems3 = 2500;
			if (i == 1400 || i == 900)items[i].max_gems3 = 5000;
			if (i == 1796) items[i].max_gems3 = 5000;
			if (i == 7188) items[i].max_gems3 = 50000;
			if (i == 242) items[i].max_gems3 = 500;
			if (i == 5138)items[i].max_gems3 = 10000;
			if (i == 5140)items[i].max_gems3 = 50000;
			if (i == 5142)items[i].max_gems3 = 100000;
			if (i == 9816)items[i].max_gems3 = 300;
			vector<int> xj, yy;
			if (i == 3000) xj = { 5586 }, yy = { 5604 };
			if (i == 3026) xj = { 5588 }, yy = { 5606 };
			if (i == 3030) xj = { 5596 }, yy = { 5608 };
			if (i == 3036) xj = { 5590 };
			if (i == 3038) xj = { 5592 };
			if (i == 3034) xj = { 5594 };
			if (i == 3024) xj = { 5598 };
			if (i == 3814) xj = { 5558 }, yy = { 5560 };
			if (i == 3032) xj = { 5570 };
			if (i == 7744) xj = { 7746 };
			if (i == 5538) xj = { 5540 };
			if (i == 5542) xj = { 5544 }, yy = { 5546 };
			if (i == 5580) xj = { 5584 }, yy = { 5582 };
			if (i == 5548) xj = { 5550 }, yy = { 6804 };
			if (i == 5552) xj = { 5554 }, yy = { 5556 };
			if (i == 5574) xj = { 5578 }, yy = { 5576 };
			if (i == 3092) xj = { 7134 }, yy = { 7118 };
			if (i == 3096) xj = { 7132 }, yy = { 7120 };
			if (i == 5448) xj = { 7468 }, yy = { 7470 };
			if (i == 3440) xj = { 5572 };
			if (i == 3454) xj = { 11130 }, yy = { 11152 };
			if (i == 3544) xj = { 5600 }, yy = { 5610 };
			if (i == 3438) xj = { 5566 }, yy = { 5568 };
			if (i == 3434) xj = { 5736 }, yy = { 5738 };
			if (i == 3436) xj = { 5986 }, yy = { 5988 };
			if (i == 3550) xj = { 6036 }, yy = { 6038 };
			if (i == 3620) xj = { 6106 }, yy = { 6108 };
			if (i == 3746) xj = { 6318 }, yy = { 6320 };
			if (i == 5100) xj = { 7060 }, yy = { 7022, 12876 };
			items[i].commontrain_reward = xj, items[i].raretrain_reward = yy;
			if (i == 3870) {
				items[i].grindable_count = -50;
				items[i].epic.insert(items[i].epic.end(), { 1830, 3886, 5112, 7044, 8924, 10130, 10148, 11238 });
				items[i].rare.insert(items[i].rare.end(), { 7042 ,11272 });
				items[i].uncommon.insert(items[i].uncommon.end(), { 10142 ,10154,10142 ,10154 });
			}
			if (i == 1056) {
				items[i].grindable_count = -500;
				items[i].epic.insert(items[i].epic.end(), { 1830, 3886, 5112, 7044, 8924, 10130, 10148, 11238 });
				items[i].rare.insert(items[i].rare.end(), { 1806, 3894, 5200, 7038, 7040, 8914, 10160, 10162, 11274 });
				items[i].uncommon.insert(items[i].uncommon.end(), { 1060, 1062, 1060, 1062 });
			}
			if (i == 1058) {
				items[i].grindable_count = 200;
				items[i].epic.insert(items[i].epic.end(), { 5112 });
				items[i].uncommon.insert(items[i].uncommon.end(), { 1060, 7026, 7028, 7030, 10154, 11260,1060, 7026, 7028, 7030, 10154, 11260 });
			}
			if (i == 1094) {
				items[i].grindable_count = 200;
				items[i].rare.insert(items[i].rare.end(), { 8914, 5200 });
				items[i].uncommon.insert(items[i].uncommon.end(), { 1060, 7032, 11258, 11266,1060, 7032, 11258, 11266 });
			}
			if (i == 1096) {
				items[i].grindable_count = 200;
				items[i].rare.insert(items[i].rare.end(), { 3894, 7036 });
				items[i].uncommon.insert(items[i].uncommon.end(), { 7032, 10142,7032, 10142 });
			}
			if (i == 1098) {
				items[i].grindable_count = 200;
				items[i].rare.insert(items[i].rare.end(), { 7036,11242 });
				items[i].uncommon.insert(items[i].uncommon.end(), { 1062, 7026, 7028, 7030, 11258, 11260 , 1062, 7026, 7028, 7030, 11258, 11260 });
			}
			if (i == 1828) {
				items[i].grindable_count = -250;
				items[i].epic.insert(items[i].epic.end(), { 1830, 10148, 11250 });
				items[i].rare.insert(items[i].rare.end(), { 1068, 1806, 7038, 7040, 7042, 10152, 12378 });
				items[i].uncommon.insert(items[i].uncommon.end(), { 1810,1810 });
			}
			if (i == 11286) {
				items[i].grindable_count = -100;
				items[i].epic.insert(items[i].epic.end(), { 11238, 11250, 12386 });
				items[i].rare.insert(items[i].rare.end(), { 11242, 11246, 11252, 11272, 11274 });
				items[i].uncommon.insert(items[i].uncommon.end(), { 11258, 11260 , 11258, 11260 });
			}
			if (i == 7058) {
				items[i].grindable_count = -70;
				items[i].epic.insert(items[i].epic.end(), { 1830, 3886, 5112, 7044, 8924, 10130, 10148, 11238, 12376, 12390 });
				items[i].rare.insert(items[i].rare.end(), { 1806, 3894, 5200, 7036, 7038, 7040, 7042, 8914, 10152, 10160, 10162, 11274 });
				items[i].uncommon.insert(items[i].uncommon.end(), { 1060, 1062, 7026, 7028, 7030, 7032, 10142, 10154, 1060, 1062, 7026, 7028, 7030, 7032, 10142, 10154 });
			}
			if (i == 1058 || i == 1828 || i == 1096 || i == 1094 || i == 3870 || i == 7058 || i == 11286 || i == 1056 || i == 1098) items[i].mooncake = true;
			if (items[i].mooncake && i != 1096) Environment()->random_mooncake.push_back(i);
			Environment()->random_mooncake.push_back(10134);
			Environment()->random_mooncake.push_back(10136);
			Environment()->random_mooncake.push_back(10138);
			Environment()->random_mooncake.push_back(10140);
			Environment()->random_mooncake.push_back(10146);
			Environment()->random_mooncake.push_back(10150);
			Environment()->random_mooncake.push_back(10164);
			if (i == 326) {
				items[i].grindable_count = 30;
				items[i].grindable_prize = 4586;
			}
			if (i == 4422 || i == 2564 || i == 2566 || i == 5372) {
				items[i].grindable_count = 20;
				items[i].grindable_prize = 4610;
			}
			if (i == 6956) {
				items[i].grindable_count = 1;
				items[i].grindable_prize = 6958;
			}
			if (i == 6972) {
				items[i].grindable_count = 5;
				items[i].grindable_prize = 6974;
			}
			if (i == 7002) {
				items[i].grindable_count = 12;
				items[i].grindable_prize = 7004;
			}
			if (i == 7050) {
				items[i].grindable_count = 20;
				items[i].grindable_prize = 7054;
			}
			if (i == 4668) {
				items[i].grindable_count = 50;
				items[i].grindable_prize = 4670;
			}
			if (i == 7012) {
				items[i].grindable_count = 1;
				items[i].grindable_prize = 7014;
			}
			if (i == 440) {
				items[i].grindable_count = 100;
				items[i].grindable_prize = 6314;
			}
			if (i == 880) {
				items[i].grindable_count = 50;
				items[i].grindable_prize = 4562;
			}
			if (i == 5348 || i == 5354 || i == 5352 || i == 5350) {
				items[i].grindable_count = 100;
				items[i].grindable_prize = 5416;
			}
			if (i == 4578) {
				items[i].grindable_count = 1;
				items[i].grindable_prize = 4580;
			}
			if (i == 7460) {
				items[i].grindable_count = 25;
				items[i].grindable_prize = 7462;
			}
			if (i == 192 || i == 1004) {
				items[i].grindable_count = 50;
				items[i].grindable_prize = 4564;
			}
			if (i == 4982) {
				items[i].grindable_count = 100;
				items[i].grindable_prize = 4984;
			}
			if (i == 4584) {
				items[i].grindable_count = 100;
				items[i].grindable_prize = 4570;
			}
			if (i == 712 || i == 960) {
				items[i].grindable_count = 1;
				items[i].grindable_prize = 4570;
			}
			if (i == 2734) {
				items[i].grindable_count = 50;
				items[i].grindable_prize = 4764;
			}
			if (i == 6988) {
				items[i].grindable_count = 10;
				items[i].grindable_prize = 6990;
			}
			if (i == 4566) {
				items[i].grindable_count = 100;
				items[i].grindable_prize = 4568;
			}
			if (i == 6998) {
				items[i].grindable_count = 2;
				items[i].grindable_prize = 7000;
			}
			if (i == 3404 || i == 3836) {
				items[i].grindable_count = 20;
				items[i].grindable_prize = 4572;
			}
			if (i == 3406) {
				items[i].grindable_count = 10;
				items[i].grindable_prize = 4572;
			}
			if (i == 954) {
				items[i].grindable_count = 100;
				items[i].grindable_prize = 4572;
			}
			if (i == 10268) {
				items[i].grindable_count = 3;
				items[i].grindable_prize = 10272;
			}
			if (i == 3182) items[i].grindable_prize = 3186;
			if (i == 3208) items[i].grindable_prize = 3242;
			if (i == 4176) items[i].grindable_prize = 4178;
			if (i == 3610) items[i].grindable_prize = 3612;
			if (i == 1706) items[i].grindable_prize = 3420;
			if (i == 4540) items[i].grindable_prize = 4542;
			if (i == 3948) items[i].grindable_prize = 6838;
			if (i == 9400) items[i].grindable_prize = 9402;
			if (i == 2290) items[i].grindable_prize = 3302;
			if (i == 3538) items[i].grindable_prize = 3540;
			if (i == 1166) items[i].grindable_prize = 3104;
			if (i == 3060) items[i].grindable_prize = 3058;
			if (i == 3048) items[i].grindable_prize = 3046;
			if (i == 3056) items[i].grindable_prize = 3054;
			if (i == 98) items[i].grindable_prize = 3070;
			if (i == 3166) items[i].grindable_prize = 3168;
			if (i == 5496) items[i].grindable_prize = 5498;
			if (i == 6688) items[i].grindable_prize = 6678;
			if (i == 6690) items[i].grindable_prize = 6680;
			if (i == 6692) items[i].grindable_prize = 6682;
			if (i == 6696) items[i].grindable_prize = 6686;
			if (i == 3090) items[i].grindable_prize = 3128;
			if (i == 3584) items[i].grindable_prize = 3580;
			if (i == 866) items[i].grindable_prize = 3688;
			if (i == 4308) items[i].grindable_prize = 4338;
			if (i == 1012 || i == 592 || i == 1018 || i == 2402) items[i].grindable_prize = 5014;
			if (i == 2564) items[i].grindable_prize = 2566;
			if (i == 7344) items[i].grindable_prize = 7346;
			if (i == 5042) items[i].grindable_prize = 7702;
			if (i == 10268) {
				items[i].grindable_count = 3;
				items[i].grindable_prize = 10272;
			}
			if (i == 3182) items[i].grindable_prize = 3186;
			if (i == 2410) {
				items[i].consume_needed = 200;
				items[i].consume_prize.push_back(2408);
			}
			if (i == 12370) {
				items[i].consume_needed = 200;
				items[i].consume_prize.push_back(4455);
			}
			if (i == 2036) {
				items[i].consume_needed = 200;
				items[i].consume_prize.push_back(2037);
			}
			if (i == 1152) {
				items[i].consume_needed = 10;
				items[i].consume_prize.push_back(1150);
			}
			if (i == 1212) {
				items[i].consume_needed = 25;
				items[i].consume_prize.push_back(1190);
			}
			if (i == 2034) {
				items[i].consume_needed = 200;
				items[i].consume_prize.push_back(2035);
			}
			if (i == 1234) {
				items[i].consume_needed = 4;
				items[i].consume_prize.push_back(1206);
			}
			if (i == 3110) {//vampire cape
				items[i].consume_needed = 25;
				items[i].consume_prize.push_back(1166);
			}
			if (i == 8936) {//vampire cape
				items[i].consume_needed = 200;
				items[i].consume_prize.push_back(8938);
			}
			if (i == 10328) {
				items[i].consume_prize.insert(items[i].consume_prize.end(), { 12772, 12396, 12420, 12418, 12416, 12780, 4152, 3114, 1250, 11314, 1956, 7102, 11332, 11336, 11334, 9042, 3100, 7104, 9048, 3126, 10184, 10186, 1990, 1986, 4166, 10206, 11322, 5208, 9056, 7122, 4172, 4156, 1234, 5250, 12414, 13218, 13212, 13214, 13216, 13202, 13204, 13206, 13170, 13174, 13234, 13238, 13222, 13226, 13224, 13254, 13244, 13252, 13250, 13182, 13198, 13178 ,13180, 13256 });
			}
			if (i == 13158) {
				items[i].consume_needed = 100;
				items[i].consume_prize.insert(items[i].consume_prize.end(), { 13218, 13212, 13214, 13216, 13202, 13204, 13206, 13170, 13174, 13234, 13238, 13222, 13226, 13224, 13254, 13244, 13252, 13250, 13182, 13198, 13178 ,13180, 13256 });
			}
			if (i == 4236) {// extractium shard
				items[i].consume_needed = 10;
				items[i].consume_prize.push_back(4234);
			}
			if (i == 12766) {
				items[i].consume_needed = 100;
				items[i].consume_prize.push_back(12768);
			}
			if (i == 5636) {//uranium glwoing lure
				items[i].consume_needed = 10;
				items[i].consume_prize.push_back(5526);
			}
			if (i == 6330) {//embers
				items[i].consume_needed = 100;
				items[i].consume_prize.push_back(6332);
			}
			if (i == 8936) {//wood chips
				items[i].consume_needed = 200;
				items[i].consume_prize.push_back(8938);
			}
			if (i == 3242) {// tempered axe fragment
				items[i].consume_needed = 100;
				items[i].consume_prize.push_back(3244);
			}
			if (i == 3186) {// tempered setel fragment
				items[i].consume_needed = 100;
				items[i].consume_prize.push_back(3190);
			}
			if (i == 5282) {// celestial dust
				items[i].consume_needed = 100;
				items[i].consume_prize.push_back(5284);
			}
			if (i == 4172) {// demonc skkulls
				items[i].consume_needed = 100;
				items[i].consume_prize.push_back(4174);
			}
			if (i == 4426) {// ruby shard
				items[i].consume_needed = 200;
				items[i].consume_prize.push_back(4428);
			}
			if (i == 2412) {// cloverleaf
				items[i].consume_needed = 4;
				items[i].consume_prize.push_back(528);
			}
			if (i == 2000) {//skeletal dragon
				items[i].consume_needed = 20;
				items[i].consume_prize.push_back(1998);
			}
			if (i == 7590) {
				items[i].consume_needed = 100;
				items[i].consume_prize.push_back(7592);
			}
			if (i == 11656) {
				items[i].consume_needed = 100;
				items[i].consume_prize.push_back(11658);
			}
			if (i == 2290) {
				items[i].consume_needed = 100;
				items[i].consume_prize.push_back(2282);
			}
			if (i == 3122) {
				items[i].consume_needed = 16;
				items[i].consume_prize.push_back(3120);
			}
			if (i == 3762) {
				items[i].consume_needed = 100;
				items[i].consume_prize.push_back(3744);
			}
			if (i == 8534) {
				items[i].consume_needed = 100;
				items[i].consume_prize.push_back(8536);
			}
			if (i == 5256) {
				items[i].consume_needed = 100;
				items[i].consume_prize.insert(items[i].consume_prize.end(), { 5234 });
			}
			if (i == 10328) items[i].consume_prize.push_back(12414);
			if (i == 11666) items[i].consume_prize.push_back(12414);
			if (i == 11574) items[i].consume_prize.push_back(12772);
			if (i == 7026 || i == 7028 || i == 7030) items[i].consume_prize.push_back(12396);
			if (i == 10652) items[i].consume_prize.push_back(12420);
			if (i == 10148) items[i].consume_prize.push_back(12418);
			if (i == 11534) items[i].consume_prize.push_back(12416);
			if (i == 11638) items[i].consume_prize.push_back(12780);
			if (i == 1950) items[i].consume_prize.push_back(4152);
			if (i == 2722) items[i].consume_prize.push_back(3114);
			if (i == 910) items[i].consume_prize.push_back(1250);
			if (i == 11046) items[i].consume_prize.push_back(11314);
			if (i == 94 || i == 604 || i == 2636 || i == 2908) items[i].consume_prize.push_back(3108);
			if (i == 274 || i == 276) items[i].consume_prize.push_back(1956);
			if (i == 6300) items[i].consume_prize.push_back(7102);
			if (i == 10730) items[i].consume_prize.push_back(11332);
			if (i == 10734) items[i].consume_prize.push_back(11336);
			if (i == 10732) items[i].consume_prize.push_back(11334);
			if (i == 6176) items[i].consume_prize.push_back(9042);
			if (i == 3040) items[i].consume_prize.push_back(3100);
			if (i == 6144) items[i].consume_prize.push_back(7104);
			if (i == 7998) items[i].consume_prize.push_back(9048);
			if (i == 1162) items[i].consume_prize.push_back(3126);
			if (i == 9322) items[i].consume_prize.push_back(10184);
			if (i == 7696) items[i].consume_prize.push_back(10186);
			if (i == 1474) items[i].consume_prize.push_back(1990);
			if (i == 1506) items[i].consume_prize.push_back(1968);
			if (i == 2386) items[i].consume_prize.push_back(4166);
			if (i == 9364) items[i].consume_prize.push_back(10206);
			if (i == 10576) items[i].consume_prize.push_back(11322);
			if (i == 4960) items[i].consume_prize.push_back(5208);
			if (i == 6196) items[i].consume_prize.push_back(9056);
			if (i == 4326) items[i].consume_prize.push_back(7122);
			if (i == 2860 || i == 2268) items[i].consume_prize.push_back(4172);
			if (i == 1114) items[i].consume_prize.push_back(4156);
			if (i == 362) items[i].consume_prize.push_back(1234);
			if (i == 4334) items[i].consume_prize.push_back(5250);
			if (i == 1408) items[i].consume_prize.push_back(5254);
			if (i == 4338) items[i].consume_prize.push_back(5252);
			if (i == 3288) items[i].consume_prize.push_back(4138);
			if (i == 3296) items[i].consume_prize.push_back(4146);
			if (i == 3290) items[i].consume_prize.push_back(4140);
			if (i == 3292) items[i].consume_prize.push_back(4142);
			if (i == 3298) items[i].consume_prize.push_back(4148);
			if (i == 3294) items[i].consume_prize.push_back(4144);
			if (i == 900 || i == 7754 || i == 7136 || i == 1576 || i == 7752 || i == 1378 || i == 7758 || i == 7760 || i == 7748) items[i].consume_prize.push_back(2000);
			if (i == 1746) items[i].consume_prize.push_back(1960);
			if (i == 5018) items[i].consume_prize.push_back(5210);
			if (i == 1252) items[i].consume_prize.push_back(1948);
			if (i == 1190) items[i].consume_prize.push_back(1214);
			if (i == 2868) items[i].consume_prize.push_back(7100);
			if (i == 1830) items[i].consume_prize.push_back(1966);
			if (i == 916 || i == 918 || i == 920 || i == 922 || i == 924 || i == 2038 || i == 2206 || i == 4444) items[i].consume_prize.push_back(1962);
			if (i == 3556) items[i].consume_prize.push_back(4188);//same drop different item
			if (i == 762) items[i].consume_prize.push_back(4190);
			if (i == 3818) items[i].consume_prize.push_back(10192);
			if (i == 366) items[i].consume_prize.push_back(4136);
			if (i == 9262) items[i].consume_prize.push_back(10212);
			if (i == 1294) items[i].consume_prize.push_back(5236);
			if (i == 1242) items[i].consume_prize.push_back(5216);
			if (i == 1244) items[i].consume_prize.push_back(5218);
			if (i == 1248) items[i].consume_prize.push_back(5220);
			if (i == 1246) items[i].consume_prize.push_back(5214);
			if (i == 3016) items[i].consume_prize.push_back(4248);
			if (i == 5528) items[i].consume_prize.push_back(4248);
			if (i == 3018) items[i].consume_prize.push_back(4248);
			if (i == 5526) items[i].consume_prize.push_back(4248);
			if (i == 242) items[i].consume_prize.push_back(1212);
			if (i == 2972) items[i].consume_prize.push_back(4182);
			if (i == 3014 || i == 3012 || i == 2914) items[i].consume_prize.push_back(4246);
			if (i == 1460) items[i].consume_prize.push_back(1970);
			if (i == 9866) items[i].consume_prize.push_back(9862);
			if (i == 2392) items[i].consume_prize.push_back(9114);
			if (i == 3218) items[i].consume_prize.push_back(3098);
			if (i == 3020) items[i].consume_prize.push_back(3098);
			if (i == 3792) items[i].consume_prize.push_back(5244);
			if (i == 10634) items[i].consume_prize.push_back(11318);
			if (i == 1198) items[i].consume_prize.push_back(5256);
			if (i == 8468) items[i].consume_prize.push_back(10232);
			if (i == 2984) items[i].consume_prize.push_back(3118);
			if (i == 4360) items[i].consume_prize.push_back(10194);
			if (i == 5754) items[i].consume_prize.push_back(8530); //black devil
			if (i == 8428) items[i].consume_prize.push_back(9488); //kitsune mask
			if (i == 10828 || i == 10830 || i == 10832 || i == 6808 || i == 6810 || i == 6812 || i == 7218 || i == 7220 || i == 7222 || i == 10528 || i == 10530 || i == 10532 || i == 414 || i == 416 || i == 418 || i == 420 || i == 422 || i == 424 || i == 426 || i == 4634 || i == 4636 || i == 4638 || i == 4640 || i == 4642 || i == 5370 || i == 5726 || i == 5728 || i == 5730 || i == 6030 || i == 6032 || i == 6034) items[i].consume_prize.push_back(4192);
			if (i == 5012 || i == 1018 || i == 592) items[i].consume_prize.push_back(1178);
			if (i == 10406) items[i].consume_prize.push_back(11316);
			if (i == 882) items[i].consume_prize.push_back(1232);
			if (i == 1934) items[i].consume_prize.push_back(3124);
			if (i == 10626) items[i].consume_prize.push_back(11312);
			if (i == 6160) items[i].consume_prize.push_back(9040);
			if (i == 3794) items[i].consume_prize.push_back(10190);
			if (i == 8018) items[i].consume_prize.push_back(9034);
			if (i == 2390) items[i].consume_prize.push_back(3122);
			if (i == 5246) items[i].consume_prize.push_back(9050);
			if (i == 6798) items[i].consume_prize.push_back(7126);
			if (i == 9722 || i == 9724) items[i].consume_prize.push_back(10200);
			if (i == 9388) items[i].consume_prize.push_back(10234);
			if (i == 4732) items[i].consume_prize.push_back(7124);
			if (i == 10804) items[i].consume_prize.push_back(11320);
			if (i == 5000 || i == 5112 || i == 5654 || i == 6854 || i == 7644 || i == 10286 || i == 934 || i == 946 || i == 984 || i == 1364 || i == 1490 || i == 1750 || i == 2046 || i == 2248 || i == 2744 || i == 3252 || i == 3446 || i == 3534 || i == 3694 || i == 3832 || i == 4242 || i == 4486 || i == 4776 || i == 4892) items[i].consume_prize.push_back(1210);
			if (i == 8522) items[i].noob_item = { { 2734, 25 }, { 4752,2 }, { 8512, 1 }, { 9680, 1 } };
			if (i == 10836) items[i].noob_item = { { 8558, 5 }, { 4296, 1 }, { 1258, 5 }, { 1260, 5 }, { 1262, 5 }, { 1264, 5 }, { 1266, 5 }, { 1268, 5 }, { 1270, 5 }, { 4318, 5 }, { 4312, 5 }, { 4308, 5 }, { 4314, 5 }, { 4310, 5 }, { 4316, 5} };
			if (i == 10838) items[i].noob_item = { { 2914, 25}, { 3012, 15}, { 3014, 10}, { 3016, 5}, { 3018, 2}, { 3020, 1} };
			if (i == 10840) items[i].noob_item = { {10854 , 1}, { 10852 , 1}, { 10850 , 1}, { 10848 , 1}, { 10846 , 1}, { 10844, 1}, { 956 , 1}, {3468, 1}, { 4564, 1}, { 3836, 1}, { 676, 1}, { 874, 1}, { 4562, 1}, { 868, 1}, { 196, 1}, { 4580, 1}, { 4586, 1}, { 962, 1}, { 540, 1}, { 3428, 1}, { 3472, 1}, { 4588, 1}, { 4602,1} };
			if (i == 10834) items[i].noob_item = { {6520, 2}, {6538, 2}, {6522, 2}, {6528, 2}, {6540, 2}, {6518, 2}, {6530, 2}, {6524, 2}, {6536, 2}, {6534, 2}, {6532, 2}, {6526, 2} };
			if (i == 10842) items[i].noob_item = { {2382, 1}, { 2300, 1}, { 2298, 1}, { 2296, 1}, { 2294, 1}, { 2292, 1}, { 2316, 1}, { 2314, 1}, { 2312, 1}, { 2310, 1}, { 2308, 1}, { 2328, 1}, { 2326, 1}, { 2324, 1}, { 2322, 1}, { 2320, 1}, { 2332, 1}, { 2334, 1}, { 2336, 1}, { 2338, 1}, { 2340,1} };
			if (i == 12678) items[i].noob_item = { { 12660, 100 }, { 12662, 100 }, { 12664, 100 }, { 12666, 100 }, { 12668,100 }, { 12670, 50}, { 12672, 50 }, { 12674,10 }, { 12676, 10 } };
			if (i == 11156) items[i].randomitem = { 6278,6744,6824,6894,7370,7474,7656,7684,7932,8028 };
			if (i == 7628) items[i].randomitem = { 7764, 7592, 7590, 7590, 7590, 7590, 7590, 7590, 7590, 7590, 7590, 7590, 7590, 7590, 7590, 7590, 7590, 7590, 7590, 7590, 7590, 7590, 7590, 7590, 7590 };
			if (i == 13160) {
				items[i].randomitem = { 13218, 13212, 13214, 13216, 13202, 13204, 13206, 13170, 13174, 13234, 13238, 13222, 13226, 13224, 13254, 13244, 13252, 13250, 13182, 13198, 13178 ,13180, 13256 };
			}
			if (i == 2204) items[i].randomitem = { 3338, 2410, 6416,3196,2206,1500,1498,2806,2804,8270,8272,8274,2244,2246,2242,3792,3306,4676,4678,4680,4682,4652,4650,4648,4646,11186,10086, 6416,3196,2206,1500,1498,2806,2804,8270,8272,8274,2244,2246,2242,3792,3306,4676,4678,4680,4682,4652,4650,4648,4646,11186,10086, 6416,3196,2206,1500,1498,2806,2804,8270,8272,8274,2244,2246,2242,3792,3306,4676,4678,4680,4682,4652,4650,4648,4646,11186,10086, 2248,2250,3792,10084, 12502, 4654 , 9380 , 11562 };
			if (i == 2558) items[i].randomitem = { 2552, 9460, 2548, 2546, 2544, 2550, 10766,2552, 9460, 2548, 2546, 2544, 2550, 10766,2552, 9460, 2548, 2546, 2544, 2550, 10766,2552, 9460, 2548, 2546, 2544, 2550, 10766,2552, 9460, 2548, 2546, 2544, 2550, 10766, 2554 };
			if (i == 1360) {
				items[i].noob_item = { { 3566,1},{ 12,1},{ 56,1},{ 16,1},{ 380,1},{ 1138,1},{ 20,1},{ 100,1},{ 378,1},{ 116,1},{ 370,1},{ 26,1},{ 22,1},{ 580,1},{ 194,1},{ 104,1},{ 190,1},{ 376,1},{ 1306,1},{ 696,1},{ 880,1},{ 166,1},{ 184,1},{ 1322,1},{ 164,1},{ 3578,1},{ 3782,1},{ 368,1},{ 24,1},{ 170,1},{ 372,1},{ 374,1},{ 52,1},{ 102,1},{ 178,1},{ 42,1},{ 68,1},{ 40,1},{ 28,1},{ 248,1},{ 176,1},{ 130,1},{ 270,1},{ 1324,1},{ 236,1},{ 142,1},{ 336,1},{ 694,1},{ 10034,1},{ 140,1},{ 76,1},{ 48,1},{ 188,1},{ 44,1},{ 34,1},{ 168,1},{ 54,1},{ 222,1},{ 174,1},{ 884,1},{ 118,1},{ 3572,1},{ 198,1},{ 548,1},{ 36,1},{ 680,1},{ 654,1},{ 122,1},{ 238,1},{ 106,1},{ 66,1},{ 38,1},{ 90,1},{ 208,1},{ 162,1},{ 30,1},{ 272,1},{ 670,1},{ 888,1},{ 144,1},{ 886,1},{ 192,1},{ 126,1},{ 1432,1},{ 2938,1},{ 172,1},{ 7630,1},{ 412,1},{ 3570,1},{ 3568,1},{ 2808,1},{ 354,1},{ 138,1},{ 9392,1},{ 214,1},{ 11202,1},{ 224,1},{ 342,1},{ 1846,1},{ 110,1},{ 108,1},{ 210,1},{ 234,1},{ 200,1},{ 58,1},{ 11202,1 } };
				items[i].newdropchance = 0;
			}
			if (i == 1680) {//sfw
				items[i].noob_item = { {12176, 1}, { 8616,1},{ 8618,1},{ 1676,1},{ 8590,1},{ 9732,1},{ 2868,1},{ 4822,1},{ 1668,1},{ 11046,1},{ 1678,1},{ 1664,1},{ 844,1},{ 2864,1},{ 3764,1},{ 6308,1},{ 6310,1},{ 6306,1},{ 6322,1},{ 1670,1},{ 4816,1},{ 4818,1},{ 2870,1},{ 2872,1},{ 2874,1},{ 2802,1},{ 1666,1},{ 4814,1 } };
				items[i].rare_item = { {12352, 1} , { 8588,1},{ 9730,1},{ 11008,1 },{12186,1}, {12180, 1}, {12176, 1}, {13572,1},{13616,1} };
				items[i].newdropchance = 4000;
			}
			if (i == 11036) {
				items[i].noob_item = { { 11024,1},{11022,1},{11032,3},{11034,3 } };
				items[i].rare_item = { { 11030,1},{ 10922,1},{ 11026,1},{ 11028,1 } };
				items[i].newdropchance = 40;
			}
			if (i == 12830) {
				items[i].noob_item = { { 12800,1},{12804,1},{12812,1},{12818,1 },{12822,1 } };
				items[i].rare_item = { { 12798,1},{ 12796,1},{ 12404,1},{ 12820,1 },{ 12412,1 } };
				items[i].newdropchance = 40;
			}
			if (i == 12832) {
				items[i].noob_item = { { 12800,1},{12804,1},{12812,1},{12818,1 },{12822,1 } };
				items[i].rare_item = { { 12798,1},{ 12796,1},{ 12404,1},{ 12820,1 },{ 12412,1 },{ 12798,1},{ 12796,1},{ 12404,1},{ 12820,1 },{ 12412,1 }, { 12798,1},{ 12796,1},{ 12404,1},{ 12820,1 },{ 12412,1 }, {12406,1} };
				items[i].newdropchance = 40;
			}
			if (i == 9680) {
				items[i].noob_item = { { 9662,2},{9666,1},{9664,4},{10912,1 } , {9668,8} , {8570,8} , {9658,2} };
				items[i].rare_item = { { 2738,1},{ 10906,1},{ 10892,1},{ 9670,1 },{ 2760,1 },{ 4772,1 },{ 3624,1 },{ 2752,1 },{ 11988,1 },{ 9650,1 },{ 9652,1 },{ 8514,1 },{ 9654,1 } };
				items[i].newdropchance = 250;
			}
			if (i == 10386) {
				items[i].noob_item = { { 11330,1},{1988,1},{1208,1},{11348,1 },{1992,1},{5256,1},{1222,1} ,{11342,1} ,{1198,1} ,{1982,1} ,{1200,1} ,{4160,1} ,{1220,1} ,{10198,1} ,{5240,1} ,{1202,1} ,{1238,1} ,{5238,1} ,{4162,1} ,{10316,1} ,{10196,1} ,{7116,1} ,{9044,1} ,{1168,1} ,{3116,1} ,{4164,1} ,{1172,1} ,{1230,1} ,{1192,1} ,{11340,1} ,{1194,1} ,{10202,1} ,{1226,1} ,{7108,1} ,{1196,1} ,{9046,1},{1980,1},{1972,1},{7110,1},{1182,1},{1994,1},{1184,1},{1186,1},{1188,1},{11330,1},{10204,1},{5222,1},{3102,1},{4154,1},{5232,1},{5224,1} };
				items[i].rare_item = { { 10326,1},{ 10322,1},{ 10324,1} };
				items[i].newdropchance = 350;
			}
			if (i == 11860) {
				items[i].noob_item = { { 11858,10},{ 11852,10},{ 11854,10},{ 11856,10},{ 11850,10},{11844,10},{11846,10},{11848,10},{11858,10},{ 11852,10},{ 11854,10},{ 11856,10},{ 11850,10},{11844,10},{11846,10},{11848,10},{11842,1},{11836,1},{11838,1},{11840,1},{11868,1},{11862,1},{11864,1},{11866,1 } };
				items[i].rare_item = { { 11826,1},{ 11820,1},{11822,1},{11824,1},{11834,1},{11828,1},{11830,1},{11832,1},{ 11818,1 } };
				items[i].newdropchance = 150;
			}
			if (i == 7346) {
				items[i].noob_item = { { 7362,5},{ 7364,5},{9126,5},{11374,5},{9128,5},{7358,5},{7354,5},{7360,5},{7352,5},{7356,5},{10256,5},{11376,5},{10282,5},{9134,5},{7348,5},{10268,5},{9130,5},{11370,5},{7342,5},{5294,5},{11354,5},{9132,5},{5298,5},{5288,5},{5292,5 } };
				items[i].newdropchance = 0;
			}
			if (i == 9286) {
				items[i].noob_item = { { 5768,1},{5766,1},{5744,1},{11628,1},{10664,1},{10596,1},{7698,1},{9282,1},{9280,1},{11656,1},{10592,1},{10590,1},{9290,1},{5758,1},{5756,1},{5760,1},{5762,1},{10598,1},{9284,1},{10582,1},{11632,1},{11634,1} };
				items[i].rare_item = { {13064,1}, {13068,1}, {13066,1}, {13084,1},{13078,1}, { 5754,1},{7696,1},{9272,1},{10576,1},{10578,1},{11622,1} };
				items[i].newdropchance = 50;
			}
			if (i == 5750) {
				items[i].noob_item = { {13090,1},{13086,1},{13098,1},{ 202,1},{204,1},{206,1},{5766,1},{5768,1},{5744,1},{7688,1},{7690,1},{7694,1},{7686,1},{7692,1 } };
				items[i].rare_item = { { 9286,1},{9286,1},{9286,1},{4994,1},{ 2978,1},{ 5766,1},{ 5768,1},{5756,1},{5758,1},{5760,1},{5762,1},{5754,1},{7698,1},{7696,1},{9286,1},{9272,1},{9286,1},{9286,1},{9286,1 } };
				items[i].newdropchance = 1500;
			}
			if (i == 13054) {
				items[i].noob_item = { {13090,5}, {13082,1}, {13096,1},{13088,1},{13092,5},{13072,1},{13086,1}, {13094,1} };
				items[i].rare_item = { {13062,1}, {13070,1}, { 13064,1} };
				items[i].newdropchance = 200;
			}
			if (i == 2306) {
				items[i].noob_item = { {13036,1},{13048,1},{13028,1}, { 10560,1},{10558,1},{10546,1},{1408,1},{1410,1},{1412,1},{1414,1},{1416,1},{1418,1},{2280,1},{2290,1},{2288,1},{3274,1},{4372,1},{4378,1},{4370,1},{4366,1},{5504,1},{5508,1},{5512,1},{5490,1},{5514,1},{5496,1},{9242,1},{9244,1},{9246,1},{9248,1},{9258,1},{9260,1},{11584,1 } };
				items[i].rare_item = { {13044,1},{13046,1},{12994,1}, { 7672,1},{10526,1 } };
				items[i].newdropchance = 40;
			}
			if (i == 7672) {
				items[i].noob_item = { {13000, 1},  { 7668,2},{7666,5},{7662,3},{11574,3},{11572,1},{7664,3},{10568,1},{1406,1 } };
				items[i].rare_item = { {13030,1}, {12996,1}, {13002,1}, { 9256,1},{ 11544,1},{ 10492,1},{ 9262,1},{ 7660,1},{ 10494,1},{ 11534,1},{ 10534,1 } };
				items[i].newdropchance = 20;
			}
			if (i == 11476) { // Black Friday Black Box Xtreme
				items[i].noob_item = { { 12860,1},{ 12858,1},{ 12864,1},{12862,1} ,{ 10334,1},{ 10330,1},{ 10336,1},{10338,1},{ 10332,1},{ 11384,1},{ 11386,1},{ 11382,1},{ 11380,1},{ 11378,1 } , { 10334,1},{ 10330,1},{ 10336,1},{10338,1},{ 10332,1},{ 11384,1},{ 11386,1},{ 11382,1},{ 11380,1},{ 11378,1 } };
				items[i].rare_item = { {10332,1}, {12856,1} };
				items[i].newdropchance = 50;
			}
			if (i == 10396) {
				items[i].noob_item = { { 12968,1 }, { 12962,1 }, { 12970,1 }, { 12964,1 }, { 12966,1 }, { 12960,5 }, { 10340,1 }, { 10342,1 }, { 10344,1 }, { 10346,1 }, { 10348,1 }, { 10330,1 }, { 10332,1 }, { 10334,1 }, { 10336,1 }, { 10338,1 }, { 11380,1 }, { 11476,1 }, { 11378,1 }, { 11382,1 }, { 11394,1 }, { 11384,1 }, { 11386,1 }, { 11392,1 }, { 1388,1 } };
				items[i].rare_item = { {11476,1} };
				items[i].newdropchance = 50;
			}
			if (i == 5404) {
				items[i].noob_item = { {5398,1} , {12882,1 }, {12888,1}, {5420,1}, {5436,1}, {5438,1}, {5540,1}, {5426,1}, {5444,1}, {7400,1} };
				items[i].rare_item = { {10508,1}, { 5424,1 } , {5422,1}, {5456,1}, {7398,1}, {7414,1}, {7396,1}, {9194,1}, {9172,1} };
				items[i].newdropchance = 25;
			}
			if (i == 5402) {
				items[i].noob_item = { {12928,1},{13016,1},{12932,1},{12926,1},{12930,1},{12922,1}, {12938, 5}, { 5394,1 }, { 9180,1 }, { 5474,1 }, { 5384,1 }, { 7458,1 }, { 1778,1 }, { 5348,1 }, { 5350,1 }, { 5352,1 }, { 5354,1 }, { 5476,1 }, { 228,1 }, { 5472,1 }, { 7454,1 }, { 9196,1 }, { 5364,1 }, { 5386,1 }, { 5358,1 }, { 5360,1 }, { 5362,1 }, { 7436,1 }, { 5400,1 }, { 5478,1 }, { 5370,1 }, { 5368,1 }, { 5396,1 }, { 5470,1 }, { 7438,1 }, { 3204,1 }, { 5372,1 }, { 7446,1 }, { 7448,1 } };
				items[i].rare_item = { {5404,1} };
				items[i].newdropchance = 120;
			}
			if (i == 11758) {
				items[i].noob_item = { {11756,3},{10778,1},{10782,1},{10774,1},{10784,1},{10780,1},{10776,1},{10786,1},{10758,1},{10754,1},{10394,1} };
				items[i].rare_item = { {11756,3},{10778,1},{10782,1},{10774,1},{10784,1},{10780,1},{10776,1},{10786,1},{10758,1},{10754,1},{10394,1}, {11756,3},{10778,1},{10782,1},{10774,1},{10784,1},{10780,1},{10776,1},{10786,1},{10758,1},{10754,1},{10394,1}, {11756,3},{10778,1},{10782,1},{10774,1},{10784,1},{10780,1},{10776,1},{10786,1},{10758,1},{10754,1},{10394,1}, {11756,3},{10778,1},{10782,1},{10774,1},{10784,1},{10780,1},{10776,1},{10786,1},{10758,1},{10754,1},{10394,1}, {11756,3},{10778,1},{10782,1},{10774,1},{10784,1},{10780,1},{10776,1},{10786,1},{10758,1},{10754,1},{10394,1}, {10748,1}, {11884, 1}, {11768,1}, {11760,1}, {8944,1}, {1970,1}, {11118,1}, {1460,1}, {9036,1}, {9758,1}, {10026,1}, {8284,1}, {10388,1}, {11318,1}, {10252,1}, {5754,1}, {9446,1}, {1458,1}, {4664,1}
				};
				items[i].newdropchance = 99999;
			}
			if (i == 11756) {
				items[i].noob_item = { {9522,5},{9526,1}, {10842,1},{10834,1}, {10840,1}, {10394, 1}, {10784,1},{10838,1},{10836,1},{10782,1}, {10786,1}, {10776,1}, {11782,2}, {11778,2},{11780,2} };
				items[i].rare_item = { {10778,1},{11758,1}, {10780, 1} };
				items[i].newdropchance = 1000;
			}
			if (i == 12566) {//garuda chest
				items[i].noob_item = { {12592,5}, {12594, 5}, {12572, 5}, {12570, 5}, {12588, 5}, {12590, 1}, {12574, 1}, {12586, 1} };
				items[i].rare_item = { {12584,1},{12428,1}, {12426, 1}, {12424, 1}, {12422, 1}, {12582, 1}, {12422, 1}, {12580, 1}, {12578, 1}, {12576, 1} };
				items[i].newdropchance = 1200;
			}
			if (i == 12568) {//garuda golden chest
				items[i].noob_item = { {12580, 1}, {12578, 1}, {12576, 1}, {12582,1} };
				items[i].rare_item = { {12354,1},{12356,1}, {12422, 1}, {12424, 1}, {12426, 1}, {12428, 1}, {12374, 1} };
				items[i].newdropchance = 2000;
			}
			if (i == 11398) {//Alien Landing POD
				items[i].noob_item = { {12972,1},{12974,1},{12978,1},{12980,1}, {10990, 1}, {11000, 1}, {11410, 1}, {11426, 1}, {10996, 1}, {11408, 1}, {11448, 1}, {11450, 1}, {11452, 1}, {11412, 1}, {11414, 2}, {10998, 1}, {11422, 5}, {10994, 1} };
				items[i].rare_item = { {10952, 1}, {10954, 1}, {10956, 1}, {10958, 1}, {10960, 1}, {} };
				items[i].newdropchance = 500;
			}
			if (i == 8410) {//Mutant food
				items[i].noob_item = { {8332, 1}, {8798, 5}, {8814, 1}, {8348, 1}, {8346, 1}, {8350, 1}, {8804, 1}, {8806, 1}, {8808, 1}, {8340, 5}, {8342, 5}, {8800, 5}, {8802, 5}, {8368, 1},{8812, 1}, {8810, 1}, {8334, 5}, {8794, 1}, {8330, 1}, {8796, 5} };
				items[i].rare_item = { {8372, 1}, {8358, 1}, {8422, 1}, {8332, 1}, {8798, 5}, {8814, 1}, {8348, 1}, {8346, 1}, {8350, 1}, {8804, 1}, {8806, 1}, {8808, 1}, {8340, 5}, {8342, 5}, {8800, 5}, {8802, 5} };
				items[i].newdropchance = 3000;
			}
			if (i == 8408) {//Mutant food
				items[i].noob_item = { {8332, 1}, {8798, 5}, {8814, 1}, {8348, 1}, {8346, 1}, {8350, 1}, {8804, 1}, {8806, 1}, {8808, 1}, {8340, 5}, {8342, 5}, {8800, 5}, {8802, 5}, {8368, 1},{8812, 1}, {8810, 1}, {8334, 5}, {8794, 1}, {8330, 1}, {8796, 5} };
				items[i].rare_item = { {8372, 1}, {8358, 1}, {8422, 1}, {8332, 1}, {8798, 5}, {8814, 1}, {8348, 1}, {8346, 1}, {8350, 1}, {8804, 1}, {8806, 1}, {8808, 1}, {8340, 5}, {8342, 5}, {8800, 5}, {8802, 5} };
				items[i].newdropchance = 3000;
			}
			if (i == 8414) {//Mutant food
				items[i].noob_item = { {8332, 1}, {8798, 5}, {8814, 1}, {8348, 1}, {8346, 1}, {8350, 1}, {8804, 1}, {8806, 1}, {8808, 1}, {8340, 5}, {8342, 5}, {8800, 5}, {8802, 5}, {8368, 1},{8812, 1}, {8810, 1}, {8334, 5}, {8794, 1}, {8330, 1}, {8796, 5} };
				items[i].rare_item = { {8372, 1}, {8358, 1}, {8422, 1}, {8332, 1}, {8798, 5}, {8814, 1}, {8348, 1}, {8346, 1}, {8350, 1}, {8804, 1}, {8806, 1}, {8808, 1}, {8340, 5}, {8342, 5}, {8800, 5}, {8802, 5} };
				items[i].newdropchance = 3000;
			}
			if (i == 8412) {//Mutant food
				items[i].noob_item = { {8332, 1}, {8798, 5}, {8814, 1}, {8348, 1}, {8346, 1}, {8350, 1}, {8804, 1}, {8806, 1}, {8808, 1}, {8340, 5}, {8342, 5}, {8800, 5}, {8802, 5}, {8368, 1},{8812, 1}, {8810, 1}, {8334, 5}, {8794, 1}, {8330, 1}, {8796, 5} };
				items[i].rare_item = { {8372, 1}, {8358, 1}, {8422, 1}, {8332, 1}, {8798, 5}, {8814, 1}, {8348, 1}, {8346, 1}, {8350, 1}, {8804, 1}, {8806, 1}, {8808, 1}, {8340, 5}, {8342, 5}, {8800, 5}, {8802, 5} };
				items[i].newdropchance = 3000;
			}
			if (i == 7954) {//spring chest
				items[i].noob_item = { {7930, 1}, {7928, 1}, {7926, 1}, {7924, 1}, {7922, 1}, {7920, 1}, {7918, 1}, {7906, 1}, {7904, 1}, {7902, 1}, {7900, 1}, {7898, 1}, {7896, 1}, {7894, 1}, {7892, 1}, {7890, 1}, {7888, 3}, {7886, 1}, {7884, 1}, {7882, 1}, {7880, 1}, {7878, 1}, {7876, 1}, {7874, 1}, {7872, 1}, {7870, 1}, {7868, 1}, {7866, 1}, {7864, 1}, {7862, 1}, {7860, 1}, {7858, 1}, {7856, 1}, {7854, 1}, {7852, 1}, {7850, 1}, {7848, 1}, {7846, 1}, {7290, 5} };
				items[i].rare_item = { {7916, 1}, {7914, 1}, {7912, 1}, {7910, 1}, {7908, 1} };
				items[i].newdropchance = 500;
			}
			if (i == 7484) {//winter chest
				items[i].noob_item = { {7292, 1}, {7230, 5}, {7226, 5}, {7248, 1}, {7282, 1}, {7294, 1}, {7268, 1}, {7236, 5}, {7238, 5}, {7324, 5}, {7326, 5}, {7284, 5}, {7218, 5}, {7296, 1}, {7274, 5}, {7290, 5}, {7270, 5}, {7224, 5}, {7272, 5}, {7320, 5}, {7322, 5}, {7246, 1}, {7266, 1}, {7264, 1}, {7262, 1}, {7302, 1}, {7240, 5}, {7486, 5}, {7228, 5}, {7242, 5}, {7244, 5}, {7288, 5} };
				items[i].rare_item = { {7304, 1}, {7260, 1}, {7298, 1}, {7278, 1}, {7280, 1}, {7276, 1}, {7250, 1}, {7252, 1}, {7254, 1}, {7256, 1}, {7300, 1}, {7258, 1} };
				items[i].newdropchance = 500;
			}
			if (i == 5948) {//Gold guild chest
				items[i].noob_item = { {6216, 1}, {6218, 1}, {6220, 1}, {6222, 1}, {6224, 5}, {6282, 1}, {6188, 1}, {6190, 1}, {6192, 1}, {6158, 1}, {6160, 1}, {6168, 5}, {6178, 5}, {6180, 5}, {6182, 5}, {6184, 5}, {6186, 5} };
				items[i].rare_item = { {6008, 1}, {6196, 1}, {6284, 1}, {6006, 1}, {6004, 1}, {6224, 5},{6190, 1},{6190, 1},{6188, 1}, {6282, 1},{6222, 1},{6180, 5}, {6004, 1}, {6196, 1}, {6284, 1}, {6006, 1}, {6004, 1}, {6196, 1}, {6284, 1}, {6006, 1}, {6004, 1} };
				items[i].newdropchance = 5500;
			}
			if (i == 12262) {//pearl chest
				items[i].noob_item = { {12216, 1} , {12218, 1}, {12220, 5}, {12222, 5}, {13590,5},{13586,5},{13588,5} };
				items[i].rare_item = { {12174, 1}, {13594,1}, {13576,1},{13584,1},{13582,1},{13576,1},{13594,1}, {12212, 1}, {12182,1}, {12208, 1}, {12210, 1}, {12214, 1}, {12562,1 }, {12560,1}, {12558,1}, {12556,1}, {12554,1}, {12552,1}, {12550,1}, {12548,1}, {12546,1} };
				items[i].newdropchance = 25;
			}
			if (i == 13598) {//pearl chest
				items[i].noob_item = { {13586, 2}, {13588, 2}, {13590, 2}, {12220, 2}, {12222, 2} };
				items[i].rare_item = { {13584, 1} };
				items[i].newdropchance = 25;
			}
			if (i == 11402) {// rubble chest
				items[i].noob_item = { {776, 5} , {776, 10}, {10950,1}, {1062,1}, {1778,5},{5764,1}, {10394,1}, {726,5} };
				items[i].rare_item = { {778, 1}, {10946,1} , {1486,1} };
				items[i].newdropchance = 150;
			}
			if (i == 11404) {//golden rubble chest
				items[i].noob_item = { {776, 20}, {776, 25}, {10950,1}, {1062,1} , {1778,5} ,{5764,1} ,{5138,1}, {726,5} };
				items[i].rare_item = { {10944, 1} , {10946,1} , {1486,1} };
				items[i].newdropchance = 150;
			}
			if (i == 12264) {//golden pearl chest
				items[i].noob_item = { {12216, 1} , {12218, 1}, {12208, 1},{13594,1},{13582,1},{13576,1},{13584,1}, {12210, 1}, {12214, 1}, {12562,1 }, {12560,1}, {12558,1}, {12556,1} , {12554,1} , {12552,1} , {12550,1} , {12548,1}, {12546,1} };
				items[i].rare_item = { {12184, 1}, {13578,1}, {13580,1}, {12174, 1}, {12182, 1}, {12268,1},{12184, 1}, {12174, 1}, {12182, 1}, {12268,1}, {12242,1} };
				items[i].newdropchance = 250;
			}
			if (i == 12044) {//starfleet cadet
				items[i].noob_item = { {12146, 10}, {12062, 1}, {12064, 1}, {12066, 1}, {12070, 1}, {12136, 1}, {12072, 1}, {12074, 1}, {12076, 1}, {12078, 1}, {12112, 1}, {12114, 1}, {12116, 1}, {12118, 1}, {12088, 1}, {12090, 1}, {12092, 1}, {12094, 1}, {12096, 1}, {12058, 1}, {12060, 1}, {12080, 1}, {12082, 1}, {12084, 1}, {12086, 1}, {12120, 1}, {12122, 1}, {12150, 1}, {12138, 1}, {12140, 1}, {12142, 1}, {12144, 1}, {12124, 1}, {12126, 1}, {12128, 1}, {12130, 1}, {12132, 1}, {12098, 1}, {12100, 1}, {12102, 1}, {12104, 1}, {12106, 1}, {12318, 1}, {12320, 1}, {12322, 1}, {12324, 1}, {12326, 1}, {12328, 1}, {12330, 1} };
				items[i].rare_item = { {12146, 10}, {12062, 1}, {12064, 1} };
				items[i].newdropchance = 2500;
			}
			if (i == 12046) {//starfleet officer
				items[i].noob_item = { {12146, 10}, {12062, 1}, {12064, 1}, {12066, 1}, {12070, 1}, {12136, 1}, {12072, 1}, {12074, 1}, {12076, 1}, {12078, 1}, {12112, 1}, {12114, 1}, {12116, 1}, {12118, 1}, {12088, 1}, {12090, 1}, {12092, 1}, {12094, 1}, {12096, 1}, {12058, 1}, {12060, 1}, {12080, 1}, {12082, 1}, {12084, 1}, {12086, 1}, {12120, 1}, {12122, 1}, {12150, 1}, {12138, 1}, {12140, 1}, {12142, 1}, {12144, 1}, {12124, 1}, {12126, 1}, {12128, 1}, {12130, 1}, {12132, 1}, {12098, 1}, {12100, 1}, {12102, 1}, {12104, 1}, {12106, 1}, {12318, 1}, {12320, 1}, {12322, 1}, {12324, 1}, {12326, 1}, {12328, 1}, {12330, 1} };
				items[i].rare_item = { {12014, 1}, {12016, 1}, {12018, 1}, {12020, 1}, {12024, 1}, {12134, 1}, {12054, 1} };
				items[i].newdropchance = 1500;
			}
			if (i == 10538) {//winter wish
				items[i].noob_item = { { 5394,1 }, { 9180,1 }, { 5474,1 }, { 5384,1 }, { 7458,1 }, { 1778,1 }, { 5348,1 }, { 5350,1 }, { 5352,1 }, { 5354,1 }, { 5476,1 }, { 228,1 }, { 5472,1 }, { 7454,1 }, { 9196,1 }, { 5364,1 }, { 5386,1 }, { 5358,1 }, { 5360,1 }, { 5362,1 }, { 7436,1 }, { 5400,1 }, { 5478,1 }, { 5370,1 }, { 5368,1 }, { 5396,1 }, { 5470,1 }, { 7438,1 }, { 3204,1 }, { 5372,1 }, { 7446,1 }, { 7448,1 } };
				items[i].rare_item = { {12936, 1}, {13018,1}, {12934,1 }, {5404,1}, {10420,1}, {10422,1}, {11496,1}, {11498,1}, {11538,1} };
				items[i].newdropchance = 750;
			}
			if (i == 10536) {//special winter wish
				items[i].noob_item = { { 7414,1 }, { 5404,1 }, { 5474,1 }, { 11454,1 }, { 9194,1 }, { 5426,1 }, { 11480,1 }, { 7398,1 }, { 10404,1 }, { 5422,1 }, { 7406,1 }, { 5424,1 }, { 10538,3 } };
				items[i].rare_item = { {11466,1}, {10498,1}, {10412,1}, {10410,1}, {10424,1}, {11478,1} };
				items[i].newdropchance = 750;
			}
			if (i == 13317) {
				items[i].noob_item = { {13290, 10} , {13292, 10} , {13298, 10} , {13300, 10}, {13286,10},{13296,10},{13288,10},{13308,5},{13304,5},{13302,5},{13306,5} };
				items[i].rare_item = { {13278,1}, { 13280,1}, { 13294,1}, { 13310,1}, { 13282,1}, { 13312,1}, { 13314,1} };
				items[i].newdropchance = 250;
			}
			if (i == 13319) {
				items[i].noob_item = { {13278,1}, { 13280,1}, { 13294,1}, { 13310,1}, { 13282,1}, { 13312,1}, { 13314,1} };
				items[i].rare_item = { {13274,1}, {13276,1}, { 13268,1}, { 13264,1}, { 13266,1}, { 13272,1} };
				items[i].newdropchance = 5;
			}
			if (i == 5090) items[i].hand_scythe_text = "`2It makes for a very tasty salad!``";
			if (i == 3088) items[i].hand_scythe_text = "`2How was there a gong in this tree!?``";
			if (i == 5198) items[i].hand_scythe_text = "`2It takes FOREVER to pick out the right grains of sand!``";
			if (i == 3086) items[i].hand_scythe_text = "`2These leaves would make a lovely crown.``";
			if (i == 3074) items[i].hand_scythe_text = "`2What's this huge leaf!?``";
			if (i == 5200) items[i].hand_scythe_text = "`2Are you feeling comfy ?``";
			if (i == 8910) items[i].hand_scythe_text = "`2Leaf Blower....``";
			if (i == 7034) items[i].hand_scythe_text = "`2What as an umbrella doing in a tree ?``";
			if (i == 11248) items[i].hand_scythe_text = "`2What's cooking? Marshmallow that's what!``";
			if (i == 10132) items[i].hand_scythe_text = "`2One with nature?``";
			if (i == 4492)  items[i].zombieprice = 25;
			if (i == 4494) items[i].zombieprice = 30;
			if (i == 4482) items[i].zombieprice = 50;
			if (i == 8980 || i == 4466 || i == 4472)items[i].zombieprice = 65;
			if (i == 4460)  items[i].zombieprice = 85;
			if (i == 4456 || i == 4458) items[i].zombieprice = 130;
			if (i == 4462)  items[i].zombieprice = 260;
			if (i == 1486) items[i].zombieprice = 300;
			if (i == 4538 || i == 4464) items[i].zombieprice = 520;
			if (i == 8950)  items[i].zombieprice = 1305;
			if (i == 4478) items[i].zombieprice = 2615;
			if (i == 9500)  items[i].zombieprice = 3000;
			if (items[i].zombieprice != 0) Environment()->zombieitem.push_back(make_pair(items[i].zombieprice, i));
			if (i == 1252 || i == 8284) items[i].surgeryprice = 13000;
			if (i == 1274) items[i].surgeryprice = 1300;
			if (i == 3790 || i == 4080 || i == 4990)items[i].surgeryprice = 500;
			if (i == 4176 || i == 4322 || i == 2976)  items[i].surgeryprice = 200;
			if (i == 1506 || i == 8954) items[i].surgeryprice = 800;
			if (i == 10112 || i == 12450) items[i].surgeryprice = 2600;
			if (i == 1486) items[i].surgeryprice = 100;
			if (items[i].surgeryprice != 0) Environment()->surgeryitem.push_back(make_pair(items[i].surgeryprice, i));
			if (i == 7146) items[i].wolfprice = 840;
			if (i == 3176 || i == 4344) items[i].wolfprice = 560;
			if (i == 3774)items[i].wolfprice = 280;
			if (i == 6842)  items[i].wolfprice = 240;
			if (i == 4350) items[i].wolfprice = 210;
			if (i == 4348) items[i].wolfprice = 120;
			if (i == 2984 || i == 2986 || i == 2992) items[i].wolfprice = 100;
			if (i == 1486 || i == 3538 || i == 4352) items[i].wolfprice = 20;
			if (i == 8262 || i == 8264 || i == 8268 || i == 8266) items[i].wolfprice = 1;
			if (items[i].wolfprice != 0) Environment()->wolfitem.push_back(make_pair(items[i].wolfprice, i));
			if (i == 611) items[i].event_name = "Easter Week";
			if (i == 4774) items[i].event_name = "Jungle Blast";
			if (i == 1396) items[i].event_name = "What's that?";
			if (i == 942) items[i].event_name = "Desert Blast";
			if (i == 263) items[i].event_name = "Beautiful Crystal";
			if (i == 4354) items[i].event_name = "Howling At The Moon";
			if (i == 5002 || i == 5004 || i == 5006 || i == 5008) items[i].event_name = "Playful Sprite";
			if (i == 1056) items[i].event_name = "Songpyeon Event";
			if (i == 121) items[i].event_name = "what a Seeds";
			if (i == 1636) items[i].event_name = "Awkward Friendly Unicorn";
			if (i == 2798) items[i].event_name = "Well, Well, Well";
			if (i == 2704) items[i].event_name = "Lost Gold";
			if (i == 3786) items[i].event_name = "That's Puzzling...";
			if (i == 528) items[i].event_name = "Luck of the Growish";
			if (i == 4522) items[i].event_name = "Lucky Kitty";
			if (i == 1360) items[i].event_name = "Winter Gift";
			if (i == 2992)  items[i].event_name = "Wolf Whistle";
			if (i == 10016)  items[i].event_name = "Hide And Seek";
			if (i == 9186)  items[i].event_name = "Royal Winter";
			if (i == 2306)  items[i].event_name = "Anniversary Party";
			if (i == 611) items[i].event_total = 100;
			if (i == 2034) items[i].event_total = 15;
			if (i == 1360) items[i].event_total = 100;
			if (i == 3786) items[i].event_total = 20;
			if (i == 263 || i == 1396 || i == 4774 || i == 942 || i == 5002 || i == 1636 || i == 2704 || i == 4522)  items[i].event_total = 1;
			if (i == 1056 || i == 2798 || i == 4354) items[i].event_total = 3;
			if (i == 121) items[i].event_total = 4;
			if (i == 528 || i == 2992 || i == 10016 || i == 9186 || i == 2306) items[i].event_total = 5;
			if (i == 5804) items[i].emoji = "(oops)|ą|";
			if (i == 5806) items[i].emoji = "(sleep)|Ċ|";
			if (i == 5808) items[i].emoji = "(punch)|ċ|";
			if (i == 5810) items[i].emoji = "(bheart)|Ĕ|";
			if (i == 5812) items[i].emoji = "(cry)|ĝ|";
			if (i == 6822) items[i].emoji = "(party)|Ĩ|";
			if (i == 5770) items[i].emoji = "(wl)|ā|";
			if (i == 5772) items[i].emoji = "(grow)|Ė|";
			if (i == 5774) items[i].emoji = "(gems)|ė|";
			if (i == 5776) items[i].emoji = "(gtoken)|ę|";
			if (i == 5778) items[i].emoji = "(vend)|Ğ|";
			if (i == 6002) items[i].emoji = "(bunny)|ě|";
			if (i == 6052) items[i].emoji = "(cactus)|ğ|";
			if (i == 6272) items[i].emoji = "(peace)|ģ|";
			if (i == 6274) items[i].emoji = "(terror)|ġ|";
			if (i == 6276) items[i].emoji = "(troll)|Ġ|";
			if (i == 7232) items[i].emoji = "(halo)|Į|";
			if (i == 7234) items[i].emoji = "(nuke)|ĭ|";
			if (i == 6122) items[i].emoji = "(pine)|Ĥ|";
			if (i == 6672) items[i].emoji = "(football)|ĥ|";
			if (i == 6322) items[i].emoji = "(fireworks)|Ħ|";
			if (i == 7062) items[i].emoji = "(song)|ī|";
			if (i == 7130) items[i].emoji = "(ghost)|Ĭ|";
			if (i == 6278) items[i].emoji = "(evil)|Ģ|";
			if (i == 6824) items[i].emoji = "(pizza)|ĩ|";
			if (i == 6744) items[i].emoji = "(alien)|ħ|";
			if (i == 6894) items[i].emoji = "(clap)|Ī|";
			if (i == 7370) items[i].emoji = "(turkey)|į|";
			if (i == 7474) items[i].emoji = "(gift)|İ|";
			if (i == 7656) items[i].emoji = "(cake)|ı|";
			if (i == 7684) items[i].emoji = "(heartarrow)|Ĳ|";
			if (i == 7932) items[i].emoji = "(shamrock)|Ĵ|";
			if (i == 8028) items[i].emoji = "(grin)|ĵ|";
			if (i == 8416) items[i].emoji = "(ill)|Ķ|";
			if (i == 10114) items[i].emoji = "(eyes)|ķ|";
			if (i == 10116) items[i].emoji = "(weary)|ĸ|";
			if (i == 7698) items[i].emoji = "(lucky)|ĳ|";
			if (i == 12542) items[i].emoji = "(plead)|Ľ|";
			if (i == 12544) items[i].emoji = "(moyai)|ļ|";
			if (i == 6286 || i == 4516 || i == 8878 || i == 10584) items[i].box_size = 20;
			if (i == 6288) items[i].box_size = 40;
			if (i == 6290) items[i].box_size = 90;
			if (i == 9894) items[i].box_size = 120;
			if (i == 3000) items[i].fish_max_lb = 15;
			if (i == 8460) items[i].fish_max_lb = 200;
			if (i == 3026) items[i].fish_max_lb = 30;
			if (i == 3030 || i == 3458 || i == 5450) items[i].fish_max_lb = 50;
			if (i == 5542 || i == 5548) items[i].fish_max_lb = 60;
			if (i == 3038) items[i].fish_max_lb = 70;
			if (i == 3032) items[i].fish_max_lb = 90;
			if (i == 8606 || i == 3452) items[i].fish_max_lb = 100;
			if (i == 3034 || i == 5552 || i == 3222) items[i].fish_max_lb = 120;
			if (i == 3450 || i == 3224 || i == 3434 || i == 3436 || i == 3550 || i == 3620 || i == 3746 || i == 5100 || i == 10264 || i == 3440 || i == 3820 || i == 3438 || i == 3544) items[i].fish_max_lb = 150;
			if (i == 3036 || i == 3814 || i == 5538) items[i].fish_max_lb = 160;
			if (i == 3226) items[i].fish_max_lb = 180;
			if (i == 5580 || i == 5574) items[i].fish_max_lb = 190;
			if (i == 4958 || i == 3024 || i == 7744 || i == 3454 || i == 3460 || i == 3094 || i == 3092 || i == 3096 || i == 3220 || i == 5448) items[i].fish_max_lb = 200;
			if (i == 2914) items[i].randomitem = { 846,344,8964,3000,3000,3034, 3034,3038, 3038,3028,3012,6080 };
			if (i == 3012) items[i].randomitem = { 3000,3000,3030, 3030,3038, 3038,3036, 3036,846,444,8966,344,3028,3022,3014,3000,3000,3030, 3030,3038, 3038,3036, 3036,846,444,8966,344,3028,3022,3014,11166,6080 };
			if (i == 3014) items[i].randomitem = { 3030, 3030, 3026, 3026,3038, 3038, 3000,3000 , 3032, 3032 ,344 ,444 ,846 ,8966 ,8964 ,1520 ,1542 ,3016 ,10786, 6080 };
			if (i == 3016) items[i].randomitem = { 846,3026, 3026,3038, 3038,3032, 3032,3036, 3036,444,1522,8256,8964,3184,1542,3018,10786, 846,3026, 3026,3038, 3038,3032, 3032,3036, 3036,444,1522,8256,8964,3184,1542,3018,10786, 10566, 12448, 6080 };
			if (i == 3018) items[i].randomitem = { 6080, 5636, 846, 3036, 3036, 3034, 3034, 3032, 3032, 3024, 846, 3036, 3036, 3034, 3034, 3032, 3032, 3024, 4958, 1520, 8966, 344, 1522, 3022, 3810, 3448, 3008, 3184, 3020, 3812, 12236, 5612, 12448 , 846, 3036, 3036, 3034, 3034, 3032, 3032, 3024, 846, 3036, 3036, 3034, 3034, 3032, 3032, 3024, 4958, 1520, 8966, 344, 1522, 3022, 3810, 3448, 3008, 3184, 3020, 3812, 12236, 5612, 12448 };
			if (i == 3020) items[i].randomitem = { 5636, 1542,3022,1520,1522,3028,3038, 3038,3026, 3026,3030,3036, 3036, 3030,7744,3032, 3032,3000,3000,3034, 3034,4958,3024, 1542,3022,1520,1522,3028,3038, 3038,3026, 3026,3030,3036, 3036, 3030,7744,3032, 3032,3000,3000,3034, 3034,4958,3024, 3814 };
			if (i == 3098) items[i].randomitem = { 6080, 3096,3094,3092,1208,1238,1992,1200,1202,1198,3096,3094,3092,1208,1238,1992,1200,1202,1198,1220 };
			if (i == 3218) items[i].randomitem = { 6080, 3204,1360,3228,3222,3224,5450,5448,3220,3226,3020 };
			if (i == 3432) items[i].randomitem = { 6080, 3544, 3820, 3434, 3438, 3436, 3440, 3550, 3620, 3746, 10264, 5100, 12228, 12230 , 12234 , 12240, 6080, 3544, 3820, 3434, 3438, 3436, 3440, 3550, 3620, 3746, 10264, 5100, 12228, 12230 , 12234 , 12240, 6080, 3544, 3820, 3434, 3438, 3436, 3440, 3550, 3620, 3746, 10264, 5100, 12228, 12230 , 12234 , 12240, 6080, 3544, 3820, 3434, 3438, 3436, 3440, 3550, 3620, 3746, 10264, 5100, 12228, 12230 , 12234 , 12240, 6080, 3544, 3820, 3434, 3438, 3436, 3440, 3550, 3620, 3746, 10264, 5100, 12228, 12230 , 12234 , 12240, 6080, 3544, 3820, 3434, 3438, 3436, 3440, 3550, 3620, 3746, 10264, 5100, 12228, 12230 , 12234 , 12240, 9386, 9384, 732, 6080, 3544, 3820, 3434, 3438, 3436, 3440, 3550, 3620, 3746, 10264, 5100, 12228, 12230 , 12234 , 12240, 6080, 3544, 3820, 3434, 3438, 3436, 3440, 3550, 3620, 3746, 10264, 5100, 12228, 12230 , 12234 , 12240, 6080, 3544, 3820, 3434, 3438, 3436, 3440, 3550, 3620, 3746, 10264, 5100, 12228, 12230 , 12234 , 12240, 6080, 3544, 3820, 3434, 3438, 3436, 3440, 3550, 3620, 3746, 10264, 5100, 12228, 12230 , 12234 , 12240, 6080, 3544, 3820, 3434, 3438, 3436, 3440, 3550, 3620, 3746, 10264, 5100, 12228, 12230 , 12234 , 12240, 6080, 3544, 3820, 3434, 3438, 3436, 3440, 3550, 3620, 3746, 10264, 5100, 12228, 12230 , 12234 , 12240, 6080, 3544, 3820, 3434, 3438, 3436, 3440, 3550, 3620, 3746, 10264, 5100, 12228, 12230 , 12234 , 12240, 6080, 3544, 3820, 3434, 3438, 3436, 3440, 3550, 3620, 3746, 10264, 5100, 12228, 12230 , 12234 , 12240, 6080, 3544, 3820, 3434, 3438, 3436, 3440, 3550, 3620, 3746, 10264, 5100, 12228, 12230 , 12234 , 12240, 6080, 3544, 3820, 3434, 3438, 3436, 3440, 3550, 3620, 3746, 10264, 5100, 12228, 12230 , 12234 , 12240, 6080, 3544, 3820, 3434, 3438, 3436, 3440, 3550, 3620, 3746, 10264, 5100, 12228, 12230 , 12234 , 12240, 6080, 3544, 3820, 3434, 3438, 3436, 3440, 3550, 3620, 3746, 10264, 5100, 12228, 12230 , 12234 , 12240, 6080, 3544, 3820, 3434, 3438, 3436, 3440, 3550, 3620, 3746, 10264, 5100, 12228, 12230 , 12234 , 12240, 6080, 3544, 3820, 3434, 3438, 3436, 3440, 3550, 3620, 3746, 10264, 5100, 12228, 12230 , 12234 , 12240, 6080, 3544, 3820, 3434, 3438, 3436, 3440, 3550, 3620, 3746, 10264, 5100, 12228, 12230 , 12234 , 12240, 6080, 3544, 3820, 3434, 3438, 3436, 3440, 3550, 3620, 3746, 10264, 5100, 12228, 12230 , 12234 , 12240, 6080, 3544, 3820, 3434, 3438, 3436, 3440, 3550, 3620, 3746, 10264, 5100, 12228, 12230 , 12234 , 12240, 6080, 3544, 3820, 3434, 3438, 3436, 3440, 3550, 3620, 3746, 10264, 5100, 12228, 12230 , 12234 , 12240 };
			if (i == 4246) items[i].randomitem = { 3096,3094,1208,1992,1200,1198 };
			if (i == 4248) items[i].randomitem = { 3096,3094,3092,1208,1238,1992,1200,1202,1198,3096,3094,3092,1208,1238,1992,1200,1202,1198,1220 };
			if (i == 5526) items[i].randomitem = { 3584,8254,5542,5538,5620,5622,5612,5526,5580,3020,11734 };
			if (i == 5528) items[i].randomitem = { 5636, 3584,5574,8968,5552,5548,5618,5624,5602,5528,5614,8252,11052,5616,3020, 12238, 12232, 3584,5574,8968,5552,5548,5618,5624,5602,5528,5614,8252,11052,5616,3020, 12238, 12232 };
			if (i == 11406) items[i].randomitem = { 11446, 11444, 11424, 11450, 11420, 11434, 11418, 11414, 11416, 11428, 11430 };
			if (i == 962 || i == 16 || i == 3472 || i == 954 || i == 880 || i == 188 || i == 190 || i == 22) {
				items[i].randomitem.push_back(882);
				items[i].chance = 1500;
			}
			else if (i == 866) {
				items[i].randomitem.push_back(870);
				items[i].chance = 5000;
			}
			else if (i == 872) {
				items[i].randomitem.push_back(876);
				items[i].chance = 5000;
			}
			else if (i == 440 || i == 1344) {
				items[i].randomitem.push_back(2800);
				items[i].chance = 5000;
			}
			else if (i == 166) {
				items[i].randomitem.push_back(1190);
				items[i].chance = 3000;
			}
			else if (i == 280) {
				items[i].randomitem.push_back(10068);
				items[i].chance = 2000;
			}
			else if (i == 326) {
				items[i].randomitem.push_back(878);
				items[i].chance = 5000;
			}
			else if (i == 1044) {
				items[i].randomitem.push_back(10070);
				items[i].chance = 5000;
			}
			else if (i == 1004) {
				items[i].randomitem.push_back(1104);
				items[i].chance = 100;
			}
			else if (i == 192) {
				items[i].randomitem.push_back(1004);
				items[i].chance = 100;
			}
			else if (items[i].blockType == BACKGROUND && items[i].rarity > 11) {
				items[i].randomitem.insert(items[i].randomitem.end(), { 2988 ,2990 });
				items[i].chance = 75;
			}
			else if (i == 3258 || i == 3262 || i == 3264 || i == 3266 || i == 3268 || i == 3270 || i == 3280 || i == 3282 || i == 3284 || i == 3286) {
				items[i].randomitem.push_back(3310);
				items[i].chance = 1000;
			}
			else if (i == 4762 || i == 262 || i == 826 || i == 5270 || i == 828 || i == 2812 || i == 3606 || i == 3424) {
				items[i].randomitem.push_back(5282);
				items[i].chance = 10;
			}
			else if (i == 3782) {
				items[i].randomitem.push_back(3784);
				items[i].chance = 25;
			}
			else if (i == 100) {
				items[i].randomitem.push_back(2792);
				items[i].chance = 25;
			}
			else if (i == 4702) {
				items[i].randomitem.push_back(4794);
				items[i].chance = 25;
			}
			else if (i == 324 || i == 322 || i == 786) {
				items[i].randomitem.push_back(1354);
				items[i].chance = 2000;
			}
			else if (i == 2708) {
				items[i].randomitem.push_back(2710);
				items[i].chance = 25;
			}
			else if (i == 2710) {
				items[i].randomitem.push_back(2712);
				items[i].chance = 25;
			}
			else if (i == 2712) {
				items[i].randomitem.push_back(2714);
				items[i].chance = 25;
			}
			else if (i == 8566 || i == 8562 || i == 8564 || i == 8560) {
				items[i].randomitem.push_back(8534);
				items[i].chance = 72;
			}
			else if (i == 2714) {
				items[i].randomitem.push_back(2716);
				items[i].chance = 25;
			}
			else if (i == 1520) {
				items[i].randomitem.push_back(3762);
				items[i].chance = 25;
			}
			else if (i == 616) {
				items[i].randomitem.push_back(618);
				items[i].chance = 5;
			}
			else if (i == 7046) {
				items[i].randomitem.push_back(7058);
				items[i].chance = 5;
			}
		}
		delete[] data;
		ifstream file_info("database/text/wiki.txt");
		if (file_info.is_open()) {
			string line_info;
			while (getline(file_info, line_info)) {
				vector<string> d_ = explode("|", line_info);
				items[atoi(d_[0].c_str())].chi = atoi(d_[1].c_str());
				if (d_[2] != "" and d_[3] != "" and isdigit(d_[2][0]) and isdigit(d_[3][0])) {
					items[atoi(d_[0].c_str())].r_1 = atoi(d_[2].c_str());
					items[atoi(d_[0].c_str())].r_2 = atoi(d_[3].c_str());
					if (items[atoi(d_[0].c_str())].r_1 % 2 == 0) items[atoi(d_[0].c_str())].r_1++;
					if (items[atoi(d_[0].c_str())].r_2 % 2 == 0) items[atoi(d_[0].c_str())].r_2++;
				}
				if (d_[4] != "") items[atoi(d_[0].c_str())].on_equip = d_[4];
				if (d_[5] != "") items[atoi(d_[0].c_str())].on_remove = d_[5];
				if (d_[6] != "") items[atoi(d_[0].c_str())].description = d_[6];
				if (d_[8] != "" and isdigit(d_[8][0])) items[atoi(d_[0].c_str())].max_gems = atoi(d_[8].c_str());
				if (d_[10] != "") items[atoi(d_[0].c_str())].playmod = d_[10];
			}
			file_info.close();
			{
				ifstream file_info("database/text/farmables.txt");
				if (file_info.is_open()) {
					string line_info;
					while (getline(file_info, line_info)) {
						for (int i_ = 0; i_ < items.size(); i_++) {
							if (items[i_].name == line_info)
								items[i_].farmable = true;
						}
					}
				}
				file_info.close();
				{
					ifstream file_info("database/text/pet_abilities.txt");
					if (file_info.is_open()) {
						string line_info;
						while (getline(file_info, line_info)) {
							vector<string> ok = explode("|", line_info);
							int id = atoi(ok[0].c_str());
							int element = atoi(ok[1].c_str());
							int cooldown = atoi(ok[4].c_str());
							vector<string> ps = explode("/", ok[5]);
							items[id].petElement = element;
							items[id].petAbility = ok[2];
							items[id].petDescription = ok[3];
							items[id].petCooldown = cooldown;
							items[id].petPrefix = ps[0];
							items[id].petSuffix = ps[1];
						}
					}
					file_info.close();
					{
						ifstream file_info("database/text/combiner.txt");
						if (file_info.is_open()) {
							string line_info, a = "";
							while (getline(file_info, line_info)) {
								vector<vector<int>> form_recipe;
								vector<string> ok = explode("|", line_info);
								int item = 0;
								for (string lalala : ok) {
									vector<string> beveik = explode(" ", lalala);
									string check_ = beveik[0];
									int count_ = 1;
									if (isdigit(check_[0])) {
										count_ = atoi(check_.c_str());
									}
									if (count_ != 1) {
										replace_str(lalala, check_ + " ", "");
									}
									if (lalala.find("pairs of ") != string::npos or lalala.find("pair of ") != string::npos)
										lalala = explode((lalala.find("pairs of ") != string::npos ? "pairs of " : "pair of "), lalala)[1];
									string ex = lalala;
									ex.erase(ex.size() - 1);
									for (int i_ = 0; i_ < items.size(); i_++) {
										if (items[i_].ori_name == lalala or items[i_].ori_name == ex) {
											form_recipe.push_back({ items[i_].id, count_ });
											item = items[i_].id;
											break;
										}
									}
								}
								if (form_recipe.size() == 4) receptai.push_back(form_recipe);
							}
						}
						file_info.close();
					}
				}
			}
		}
		items[5000].blockType = WEATHER;
		items[3832].blockType = WEATHER;
		items[10058].blockType = WEATHER;
		for (vector<vector<int>>recipe : receptai) Environment()->combining.push_back("\nadd_label_with_icon|small|`1" + to_string(recipe[3][1]) + " " + items[recipe[3][0]].ori_name + "`` = `w" + to_string(recipe[0][1]) + "x " + items[recipe[0][0]].ori_name + "`` + `w" + to_string(recipe[1][1]) + "x " + items[recipe[1][0]].ori_name + "`` + `w" + to_string(recipe[2][1]) + "x " + items[recipe[2][0]].ori_name + "``|left|" + to_string(recipe[3][0]) + "|");
		for (vector<vector<int>>crystal : crystal_receptai) {
			string recipe_text = "";
			vector<string> recipes;
			for (int i = 0; i < 5; i++) if (crystal[i][1]) recipes.push_back("`w" + to_string(crystal[i][1]) + "x " + items[crystal[i][0]].ori_name + "``");
			for (int b = 0; b < recipes.size(); b++) {
				if (recipes.size() - b == 1)recipe_text += recipes[b];
				else  recipe_text += recipes[b] + " + ";
			}
			Environment()->crystals.push_back("\nadd_label_with_icon|small|`1" + (crystal[5][1] == 0 ? "" : to_string(crystal[5][1])) + " " + items[crystal[5][0]].ori_name + "`` = " + recipe_text + "``|left|" + to_string(crystal[5][0]) + "|");
		}
		for (int i = 0; i < info_about_playmods.size(); i++) {
			int item_id = atoi(info_about_playmods[i][1].c_str());
			items[item_id].playmod_id = atoi(info_about_playmods[i][0].c_str());
		}
		items[9882].playmod_id = 126;
		items[6860].playmod_id = 132;
		items[6862].playmod_id = 133;
		items[8186].playmod_id = 132;
		items[4846].playmod_id = 136;
		items[4848].playmod_id = 136;
		items[14528].randomitem = { 1672, 1824, 6144, 9760, 10170, 11588, 3104, 8194, 9322, 11016, 14218, 242, 1796, 2408, 5020, 8024, 8026, 5480, 5482, 5484, 5486, 5488 };
		items[14530].randomitem = { 1672, 13200, 5738, 6006, 9064, 10670, 2212, 2450, 1824, 6144, 5638, 9760, 4802, 7188, 12054, 10170, 11588, 3104, 8194, 9322, 11016, 14218, 242, 1796, 2408, 5020, 8024, 8026, 5480, 5482, 5484, 5486, 5488 };
		items[9528].wrench_by_public = true;
		for (int i = 0; i < itemCount; i++) {
			if (i == 9784 || i == 9780 || i == 7734 || i == 6026 || i == 9782 || i == 9488 || i == 9776 || i == 9778 || i == 9774 || i == 1790 || i == 8430 || i == 9532 || i == 9548 || i == 8430 || i == 9550 || i == 9574 || i == 9576 || i == 9604 || i == 9766 || i == 9770 || i == 9772 || i == 5814 || i == 9640 || i == 1674 || i == 5480 || i == 9786 || i == 1784 || i == 1782 || i == 1780 || i == 2592 || i == 8286 || i == 1970 || i == 9800 || i == 9802 || i == 9804 || i == 9806 || i == 9808 || i == 9810 || i == 9812 || i == 9814 || i == 9542 || i == 9830 || i == 1460 || i == 2392 || i == 9726 || i == 5158 || i == 9764 || i == 9726 || i == 9812 || i == 9878 || i == 9886 || i == 9880 || i == 12400 || i == 9884 || i == 12986 || i == 12684 || i == 9890 || i == 12398 || i == 9906 || i == 9896 || i == 9908 || i == 9914 || i == 10290 || i == 9916 || i == 9918 || i == 13118 || i == 9984 || i == 9964 || i == 9980 || i == 9996 || i == 9974 || i == 10020 || i == 10120 || i == 10018 || i == 9838 || i == 9846 || i == 5126 || i == 5128 || i == 5130 || i == 5132 || i == 5134 || i == 5144 || i == 5146 || i == 5148 || i == 5150 || i == 5152 || i == 5162 || i == 5164 || i == 5166 || i == 5168 || i == 5170 || i == 5180 || i == 5182 || i == 5184 || i == 5186 || i == 5188 || i == 7168 || i == 7170 || i == 7172 || i == 7174 || i == 9212 || i == 9846 || i == 10384 || i == 10936 || i == 10938 || i == 10940 || i == 10932 || i == 10942 || i == 10684 || i == 10934 || i == 10946 || i == 10944) items[i].unobtainable = true;
			if (items[i].blockType == CLOTHING && items[i].unobtainable == false && i != 1780 && items[i].untradeable == 0) Environment()->dstone.push_back(i);
			if (i == 778) items[i].breakHits = 1;
			if (items[i].ori_name.find("null") != string::npos or items[i].ori_name.find("Data Bedrock") != string::npos) items[i].blocked_place = true;
			if (i == 10372) continue;
			if (i >= items.size() - 200) {
				if (items[i].ori_name.find("null") == string::npos && items[i].unobtainable == false && i % 2 == 0 && items[i].untradeable == 0) {
					Environment()->random_shop_item.push_back(i);
				}
			}
			if (item_playmod(i, "putt putt putt") || item_playmod(i, "Black Magic")) items[i].playmod_total += "Black Magic";
			if (item_playmod(i, "double jump") || item_playmod(i, "hoveration!") || item_playmod(i, "Spirit Form") || item_playmod(i, "aurora") || item_playmod(i, "Jump: Enchantment") || item_playmod(i, "Flame On")) items[i].playmod_total += "double jump";
			if (item_playmod(i, "build range") || item_playmod(i, "energized horn") || item_playmod(i, "Punch Damage + Build Range: Neptune's Trident") || item_playmod(i, "Extended Punch and Build Range...")) items[i].playmod_total += "build range ";
			if (item_playmod(i, "punch range") || item_playmod(i, "Extended Punch and Build Range...") || item_playmod(i, "Punch Range and Build Range")) items[i].playmod_total += " punch range ";
			if (item_playmod(i, "eye beam") || item_playmod(i, "cupid's firepower")) items[i].playmod_total += " punch range- ";
			if (item_playmod(i, "high jump"))items[i].playmod_total += " high jump ";
			if (item_playmod(i, "fists o' fury") || item_playmod(i, "Legendary Rayman's Fist") || item_playmod(i, "Legendary!"))items[i].playmod_total += " fists o' fury ";
			if (item_playmod(i, "Speedy") || item_playmod(i, "Mythical Rayman's Fist: One hit, Double XP, Double OPC, Extremely Long Punch, Extremely Long Build, Super Strong Punch, Shining & Speedy")) items[i].playmod_total += " speedy ";
			if (item_playmod(i, "Fishy")) items[i].playmod_total += " punch range+ ";
			if (item_playmod(i, "Muted by stitches!") || item_playmod(i, "Iron MMMFF")) items[i].playmod_total += " Iron MMMFF ";
			if (item_playmod(i, "Enhanced Digging") || item_playmod(i, "diggin' it") || item_playmod(i, "Dragonborn") or item_playmod(i, "Death To Blocks!")) items[i].playmod_total += " Enhanced Digging ";
			if (item_playmod(i, "I'm On A Shark!") || item_playmod(i, "Slightly Damp") || item_playmod(i, "Speedy in Water") || item_playmod(i, "XP Buff: Wolf Worlds") or item_playmod(i, "A Little Fishy") or item_playmod(i, "Slightly Damp") or item_playmod(i, "Will of the Wild")) items[i].playmod_total += " water ";
			if (item_playmod(i, "Slowfall") || item_playmod(i, "Slowfall:")) items[i].playmod_total += " slowfall ";
			if (items[i].playmod_total.empty()) items[i].playmod_total = items[i].playmod;
			if (i == 2204) {
				items[i].geiger_give_back = 2286;
				items[2286].geiger_give_back = 2204;
			}
			if (i == 2558) {
				items[i].geiger_give_back = 2560;
				items[2560].geiger_give_back = 2558;
			}
			if (i == 1684 || i == 1912 || i == 4482 || i == 4446) items[i].path_marker = true;
			if (i == 9528 || i == 758 || i == 9528 || i == 756 || i == 9922 || i == 1902 || i == 1900 || items[i].blockType == BlockTypes::DONATION || items[i].blockType == BlockTypes::VENDING || i == 9528 || i != 2398 || i == 9828 || i == 12826 || items[i].blockType == BlockTypes::BULLETIN_BOARD || items[i].blockType == BlockTypes::MAILBOX) {
				if (i == 10374 || i == 2072 || items[i].blockType == BlockTypes::GATEWAY || items[i].blockType == BlockTypes::SIGN or items[i].can_be_changed_to_public || i == 4296 || i == 8558 || items[i].blockType == 20 || items[i].blockType == BlockTypes::SIGN || items[i].blockType == BlockTypes::DISPLAY || items[i].blockType == BlockTypes::WEATHER || items[i].blockType == BlockTypes::DOOR || items[i].blockType == BlockTypes::PORTAL || i == 1436 || i == 8246 || i == 10258 || i == 4296 || items[i].blockType == BlockTypes::LOCK) {
				
				}
				else items[i].wrench_by_public = true;
			}
			if (i == 2072 || items[i].blockType == BlockTypes::BULLETIN_BOARD || i == 10924 || items[i].blockType == BlockTypes::PHONE || items[i].actionType == 92 || items[i].blockType == BlockTypes::CRYSTAL or items[i].blockType == BlockTypes::STORAGE or i == 6016 or items[i].blockType == BlockTypes::CCTV or i == 2646 or i == 4722 or items[i].actionType == 89 || items[i].actionType == 98 || i == 6546 || i == 5318 || i == 3760 || i == 4830 || i == 9346) {
				if (i != 3832) items[i].simple_load = true;
			}
			if (items[i].ori_name.find("Guild Flag") != string::npos || items[i].ori_name.find("Guild Banner") != string::npos) {
				items[i].blocked_place = true;
			}
			if (i == 1926)items[i].collisionType = 1;
			if (i == 242) {
				items[i].compress_return_count = 100;
				items[i].compress_item_return = 1796;
				items[items[i].compress_item_return].compress_return_count = 1;
				items[items[i].compress_item_return].compress_item_return = i;
			}
			if (i == 7188) {
				items[i].compress_return_count = 1;
				items[i].compress_item_return = 1796;
			}
			if (i == 4844) {
				items[i].compress_return_count = 100;
				items[i].compress_item_return = 4850;
				items[items[i].compress_item_return].compress_return_count = 1;
				items[items[i].compress_item_return].compress_item_return = i;
			}
			if (i == 4846) {
				items[i].compress_return_count = 100;
				items[i].compress_item_return = 4852;
				items[items[i].compress_item_return].compress_return_count = 1;
				items[items[i].compress_item_return].compress_item_return = i;
			}
			if (i == 4848) {
				items[i].compress_return_count = 100;
				items[i].compress_item_return = 4854;
				items[items[i].compress_item_return].compress_return_count = 1;
				items[items[i].compress_item_return].compress_item_return = i;
			}
			if (i == 4844) {
				items[i].compress_return_count = 100;
				items[i].compress_item_return = 4852;
				items[items[i].compress_item_return].compress_return_count = 1;
				items[items[i].compress_item_return].compress_item_return = i;
			}
			if (i == 4354) {
				items[i].compress_return_count = 100;
				items[i].compress_item_return = 4356;
				items[items[i].compress_item_return].compress_return_count = 1;
				items[items[i].compress_item_return].compress_item_return = i;
			}
			if (i == 12766) {
				items[i].compress_return_count = 100;
				items[i].compress_item_return = 12768;
				items[items[i].compress_item_return].compress_return_count = 1;
				items[items[i].compress_item_return].compress_item_return = i;
			}
			if (i == 4298) {
				items[i].compress_return_count = 100;
				items[i].compress_item_return = 4300;
				items[items[i].compress_item_return].compress_return_count = 1;
				items[items[i].compress_item_return].compress_item_return = i;
			}
			if (i == 4450) {
				items[i].compress_return_count = 100;
				items[i].compress_item_return = 4452;
				items[items[i].compress_item_return].compress_return_count = 1;
				items[items[i].compress_item_return].compress_item_return = i;
			}
			if (i == 1486) {
				items[i].compress_return_count = 100;
				items[i].compress_item_return = 6802;
				items[items[i].compress_item_return].compress_return_count = 1;
				items[items[i].compress_item_return].compress_item_return = i;
			}
			if (i == 10)  items[i].fossil_rock = 3918, items[items[i].fossil_rock].fossil_rock2 = i, items[items[i].fossil_rock].blockType = BlockTypes::FOSSIL;
			if (i == 1538)  items[i].fossil_rock = 3922, items[items[i].fossil_rock].fossil_rock2 = i, items[items[i].fossil_rock].blockType = BlockTypes::FOSSIL;
			if (i == 1134) items[i].fossil_rock = 3926, items[items[i].fossil_rock].fossil_rock2 = i, items[items[i].fossil_rock].blockType = BlockTypes::FOSSIL;
			if (i == 3930) items[i].fossil_rock = 3928, items[items[i].fossil_rock].fossil_rock2 = i, items[items[i].fossil_rock].blockType = BlockTypes::FOSSIL;
			if (i == 2492) items[i].fossil_rock = 3924, items[items[i].fossil_rock].fossil_rock2 = i, items[items[i].fossil_rock].blockType = BlockTypes::FOSSIL;
			if (i == 944) items[i].fossil_rock = 3920, items[items[i].fossil_rock].fossil_rock2 = i, items[items[i].fossil_rock].blockType = BlockTypes::FOSSIL;
			if (i == 6238)  items[i].description = "Earn points by hitting things with `2GrowTech's special anomalizing hammers`` - the better the hammer, the bigger the score! Players can earn points by `2smashing`` blocks with appropriate hammers equipped.", items[i].hand_scythe_text = "Block Bashers", items[i].texture_name = "store_buttons20.rttex", items[i].texture_y = 4;
			if (i == 6828)  items[i].description = "Earn points by building blocks with `2GrowTech's special anomalizing trowels`` - the better the trowel, the bigger the score! Players can earn points by `2placing blocks`` with appropriate trowels equipped.", items[i].hand_scythe_text = "Block Builders", items[i].texture_name = "store_buttons21.rttex", items[i].texture_y = 4;
			if (i == 6256)  items[i].description = "Earn points by catching fish with `2GrowTech's special anomalizing rods`` - the better the rod, the bigger the score! Players can earn points by `2fishing`` with appropriate fishing rods equipped.", items[i].hand_scythe_text = "Fishing Fanatics", items[i].texture_name = "store_buttons20.rttex", items[i].texture_y = 2;
			if (i == 6244)  items[i].description = "Earn points by harvesting things with `2GrowTech's special anomalizing scythes`` - the better the scythe, the bigger the score! Players can earn points by `2harvesting trees`` with appropriate scythes equipped.", items[i].hand_scythe_text = "Harvest Heroes", items[i].texture_name = "store_buttons20.rttex", items[i].texture_y = 5;
			if (i == 6834)  items[i].description = "Earn points by splicing seeds with `2GrowTech's special anomalizing cultivators`` - the better the cultivator, the bigger the score! Players can earn points by `2splicing seeds`` with appropriate cultivators equipped.", items[i].hand_scythe_text = "Speedy Splicers", items[i].texture_name = "store_buttons21.rttex", items[i].texture_y = 3;
			if (i == 6250)  items[i].description = "Earn points by completing surgeries with `2GrowTech's special anomalizing bone saws`` - the better the bone saw, the bigger the score! Players can earn points by `2performing surgeries`` with appropriate bone saws equipped.", items[i].hand_scythe_text = "Surgery Stars", items[i].texture_name = "store_buttons20.rttex", items[i].texture_y = 3;
			if (i == 822)items[i].block_flag = 0x04000000;
			if (items[i].fossil_rock != 0) items[items[i].fossil_rock].block_flag = 0x0400000;
			if (i == 3062 || i == 3102)items[i].block_flag = 0x10000000;
			if (i == 1866)items[i].block_flag = 0x08000000;
			if (i == 9776 || i == 9536 || i == 3774 || i == 278 || i == 11818 || i == 9524 || i == 9526 || i == 9520 || i == 9522 || i == 9492 || i == 9168 || i == 7962 || i == 5190 || i == 8428 || i == 5196 || i == 5194 || i == 11478 || i == 1442 || i == 11466 || i == 11288 || i == 11134 || i == 10396 || i == 11562 || i == 5156 || i == 5160 || i == 5172 || i == 5174 || i == 5176 || i == 5154 || i == 9532 || i == 9534 || i == 9540 || i == 12628 || i == 12630 || i == 12632 || i == 12634 || i == 12636 || i == 12638 || i == 12640 || i == 5156 || i == 9950 || i == 10024 || i == 101) items[i].untradeable = 0; // rift wings 
			if (i == 9802 || i == 9806 || i == 9808 || i == 9804) items[i].untradeable = 1;
			if (i == 9862)  items[i].randomitem = { 6016, 4802,4534 , 4590 , 4628 , 4746 , 4988 , 5020 , 5088 , 5206 , 5322 , 5712 , 6294 , 6338 , 6758 , 6892 , 7192 , 7196 , 7384 , 7568 , 7570 , 7572, 7574,  7676 , 7678, 7680, 7682, 7836, 7838, 7840, 7842, 8006, 8008, 8010, 8012, 8288, 8290, 8292, 8294, 8432, 8434, 8436, 8438, 8576, 8578, 8580, 8582, 8816, 8818, 8820, 8822, 8898, 8900, 8902, 8904, 9008, 9010, 9012, 9014, 9116, 9118, 9120, 9122, 9136, 9138, 9236, 9348, 9408, 9462, 9464, 9606, 9648, 9760, 10044, 10128, 10166, 10246, 10426, 10496, 10618, 10666, 10718, 10810, 10914, 11006, 11116, 11232, 4534 , 4590 , 4628 , 4746  , 4988 , 5020 , 5088 , 5206 , 5322 , 5712  , 6294 , 6338 , 6758 , 6892 , 7192 , 7196 , 7384 , 7568 , 7570 , 7572, 7574,  7676 , 7678, 7680, 7682, 7836, 7838, 7840, 7842, 8006, 8008, 8010, 8012, 8288, 8290, 8292, 8294, 8432, 8434, 8436, 8438, 8576, 8578, 8580, 8582, 8816, 8818, 8820, 8822, 8898, 8900, 8902, 8904, 9008, 9010, 9012, 9014, 9116, 9118, 9120, 9122, 9136, 9138, 9236, 9348, 9408, 9462, 9464, 9606, 9648, 9760, 10044, 10128, 10166, 10246, 10426, 10496, 10618, 10666, 10718, 10810, 10914, 11006, 11116, 11232, 4534 , 4590 , 4628 , 4746  , 4988 , 5020 , 5088 , 5206 , 5322 , 5712 , 6294 , 6338 , 6758 , 6892 , 7192 , 7196 , 7384 , 7568 , 7570 , 7572, 7574,  7676 , 7678, 7680, 7682, 7836, 7838, 7840, 7842, 8006, 8008, 8010, 8012, 8288, 8290, 8292, 8294, 8432, 8434, 8436, 8438, 8576, 8578, 8580, 8582, 8816, 8818, 8820, 8822, 8898, 8900, 8902, 8904, 9008, 9010, 9012, 9014, 9116, 9118, 9120, 9122, 9136, 9138, 9236, 9348, 9408, 9462, 9464, 9606, 9648, 9760, 10044, 10128, 10166, 10246, 10426, 10496, 10618, 10666, 10718, 10810, 10914, 11006, 11116, 11232, 4534 , 4590 , 4628 , 4746  , 4988 , 5020 , 5088 , 5206 , 5322 , 5712  , 6294 , 6338 , 6758 , 6892 , 7192 , 7196 , 7384 , 7568 , 7570 , 7572, 7574,  7676 , 7678, 7680, 7682, 7836, 7838, 7840, 7842, 8006, 8008, 8010, 8012, 8288, 8290, 8292, 8294, 8432, 8434, 8436, 8438, 8576, 8578, 8580, 8582, 8816, 8818, 8820, 8822, 8898, 8900, 8902, 8904, 9008, 9010, 9012, 9014, 9116, 9118, 9120, 9122, 9136, 9138, 9236, 9348, 9408, 9462, 9464, 9606, 9648, 9760, 10044, 10128, 10166, 10246, 10426, 10496, 10618, 10666, 10718, 10810, 10914, 11006, 11116, 11232, 4802,4534 , 4590 , 4628 , 4746 , 4988 , 5020 , 5088 , 5206 , 5322 , 5712 , 6294 , 6338 , 6758 , 6892 , 7192 , 7196 , 7384 , 7568 , 7570 , 7572, 7574,  7676 , 7678, 7680, 7682, 7836, 7838, 7840, 7842, 8006, 8008, 8010, 8012, 8288, 8290, 8292, 8294, 8432, 8434, 8436, 8438, 8576, 8578, 8580, 8582, 8816, 8818, 8820, 8822, 8898, 8900, 8902, 8904, 9008, 9010, 9012, 9014, 9116, 9118, 9120, 9122, 9136, 9138, 9236, 9348, 9408, 9462, 9464, 9606, 9648, 9760, 10044, 10128, 10166, 10246, 10426, 10496, 10618, 10666, 10718, 10810, 10914, 11006, 11116, 11232, 4534 , 4590 , 4628 , 4746  , 4988 , 5020 , 5088 , 5206 , 5322 , 5712  , 6294 , 6338 , 6758 , 6892 , 7192 , 7196 , 7384 , 7568 , 7570 , 7572, 7574,  7676 , 7678, 7680, 7682, 7836, 7838, 7840, 7842, 8006, 8008, 8010, 8012, 8288, 8290, 8292, 8294, 8432, 8434, 8436, 8438, 8576, 8578, 8580, 8582, 8816, 8818, 8820, 8822, 8898, 8900, 8902, 8904, 9008, 9010, 9012, 9014, 9116, 9118, 9120, 9122, 9136, 9138, 9236, 9348, 9408, 9462, 9464, 9606, 9648, 9760, 10044, 10128, 10166, 10246, 10426, 10496, 10618, 10666, 10718, 10810, 10914, 11006, 11116, 11232, 4534 , 4590 , 4628 , 4746  , 4988 , 5020 , 5088 , 5206 , 5322 , 5712 , 6294 , 6338 , 6758 , 6892 , 7192 , 7196 , 7384 , 7568 , 7570 , 7572, 7574,  7676 , 7678, 7680, 7682, 7836, 7838, 7840, 7842, 8006, 8008, 8010, 8012, 8288, 8290, 8292, 8294, 8432, 8434, 8436, 8438, 8576, 8578, 8580, 8582, 8816, 8818, 8820, 8822, 8898, 8900, 8902, 8904, 9008, 9010, 9012, 9014, 9116, 9118, 9120, 9122, 9136, 9138, 9236, 9348, 9408, 9462, 9464, 9606, 9648, 9760, 10044, 10128, 10166, 10246, 10426, 10496, 10618, 10666, 10718, 10810, 10914, 11006, 11116, 11232, 4534 , 4590 , 4628 , 4746  , 4988 , 5020 , 5088 , 5206 , 5322 , 5712  , 6294 , 6338 , 6758 , 6892 , 7192 , 7196 , 7384 , 7568 , 7570 , 7572, 7574,  7676 , 7678, 7680, 7682, 7836, 7838, 7840, 7842, 8006, 8008, 8010, 8012, 8288, 8290, 8292, 8294, 8432, 8434, 8436, 8438, 8576, 8578, 8580, 8582, 8816, 8818, 8820, 8822, 8898, 8900, 8902, 8904, 9008, 9010, 9012, 9014, 9116, 9118, 9120, 9122, 9136, 9138, 9236, 9348, 9408, 9462, 9464, 9606, 9648, 9760, 10044, 10128, 10166, 10246, 10426, 10496, 10618, 10666, 10718, 10810, 10914, 11006, 11116, 11232 };
			if (items[i].grindable_count == 0 && items[i].grindable_prize != 0) Environment()->combusting.push_back("\nadd_label_with_icon|small|Burn `w" + items[i].ori_name + "`` to get `1" + items[items[i].grindable_prize].ori_name + "``|left|" + to_string(i) + "|");
			if (items[i].r_1 != 0 && items[i].r_2 != 0) Environment()->splicing.push_back("\nadd_label_with_icon|small|`1" + items[i].ori_name + "`` = `w" + items[items[i].r_1].ori_name + "`` + `w" + items[items[i].r_2].ori_name + "``|left|" + to_string(i) + "|");
			if (items[i].blockType == BlockTypes::PLATFORM) items[i].collisionType = 0;
			if (i == 12014 || i == 12016 || i == 12018 || i == 12020) items[i].flagmay = 21;
			if (i == 11560 || i == 11554 || i == 11556 || i == 11558 || i == 13220 || i == 13196) items[i].flagmay = 20;
			if (i == 10956 || i == 10958 || i == 10954 || i == 10952 || i == 10960) items[i].flagmay = 18;
			if (i == 12866 || i == 12868) items[i].flagmay = 26;
			if (i == 12646 || i == 12648 || i == 12650) items[i].flagmay = 23;
			if (i == 10618) items[i].flagmay = 13;
			if (items[i].unobtainable == false && items[i].untradeable == 0) {
				if (items[i].clothingType == 6 and i % 2 == 0) {
					items[14084].randomitem.push_back(i);
				}
				if (i != 9852 and i != 9160 and i != 2950 and i != 1794 and i != 8470 and i != 7188 and i != 13200) {
					if ((items[i].blockType == BlockTypes::LOCK or items[i].clothingType == 5 or items[i].clothingType == 6) and i % 2 == 0 and i != 5814 and i != 9852 and i != 9726) {
						items[5136].randomitem.push_back(i);
						items[14596].randomitem.push_back(i);
					}
				}
			}
			if (items[i].blockType == BlockTypes::CONSUMABLE and i != 9384 and i != 6336 and i != 7480 and i != 9140 and i != 9110 and i != 9112 and i != 9852 and items[i].untradeable == 0) {
				items[9600].randomitem.push_back(i);
				items[14596].randomitem.push_back(i);
			}
			items[i].newdropchance = 38 - items[i].rarity / 8;
			if (items[i].newdropchance < 21)  items[i].newdropchance = 21;
			if (items[i].farmable) {
				if (items[i].rarity < 30)  items[i].newdropchance = 31;
			}
			if (i == 5134 || i == 5188 || i == 7166 || i == 5080 || i == 5082 || i == 9920 || i == 10126 || i == 10124 || i == 10118) items[i].chance = 10;
			if (items[i].rarity == 0 || items[i].rarity > 363)items[i].max_gems2 = 0;
			else if (items[i].r_1 == 0 or items[i].r_2 == 0) items[i].max_gems2 = 0;
			else items[i].max_gems2 = items[i].max_gems / 2.5;
			if (i == 6 || i == 8 || items[i].blockType == BlockTypes::MAIN_DOOR || i == 3760) items[i].block_possible_put = true;
			if (i != 5816 && i != 1424 && items[i].untradeable != 1 && i != 9386 && i != 9380 && i != 9384 && i != 5136 && i != 14596) {
				if (items[i].max_gems != 0 || items[i].blockType == BlockTypes::ADVENTURE || items[i].blockType == BlockTypes::PROVIDER || items[i].blockType == BlockTypes::SEWINGMACHINE || items[i].blockType == BlockTypes::PHONE || items[i].blockType == BlockTypes::DONATION || items[i].blockType == BlockTypes::DISPLAY || items[i].blockType == BlockTypes::GROUND_BLOCK || items[i].blockType == BlockTypes::STEAM || items[i].blockType == BlockTypes::BULLETIN_BOARD || items[i].blockType == BlockTypes::MAILBOX || items[i].blockType == BlockTypes::SWITCH_BLOCK || items[i].blockType == BlockTypes::CHEST || items[i].blockType == BlockTypes::BOUNCY || items[i].blockType == BlockTypes::RANDOM_BLOCK || items[i].blockType == BlockTypes::PORTAL || items[i].blockType == BlockTypes::ANIM_FOREGROUND || items[i].blockType == BlockTypes::TRAMPOLINE || items[i].blockType == BlockTypes::DEADLY || items[i].blockType == BlockTypes::TREASURE || items[i].blockType == BlockTypes::CHEMICAL_COMBINER || items[i].blockType == BlockTypes::TOGGLE_FOREGROUND || items[i].blockType == BlockTypes::SFX_FOREGROUND || items[i].blockType == BlockTypes::PLATFORM || items[i].blockType == BlockTypes::GATEWAY || items[i].blockType == BlockTypes::CHECKPOINT || items[i].blockType == BlockTypes::SIGN || items[i].blockType == BlockTypes::DOOR || items[i].blockType == BlockTypes::BEDROCK || items[i].blockType == BlockTypes::MAIN_DOOR || items[i].blockType == BlockTypes::FOREGROUND || items[i].blockType == BlockTypes::BACKGROUND || items[i].blockType == BlockTypes::SEED || items[i].blockType == BlockTypes::PAIN_BLOCK) items[i].block_possible_put = true;
			}
			if (items[i].blockType == BlockTypes::SEED || items[i].rarity < 1 || items[i].rarity == 999 || items[i].block_possible_put == false || items[i].r_1 == 2037 || items[i].r_2 == 2037 || items[i].r_1 == 2035 || items[i].r_2 == 2035 || items[i].r_1 + items[i].r_2 == 0 || items[i].blockType == BlockTypes::CLOTHING || items[i].untradeable || i == 1424 || i == 5816 || items[i].rarity > 200) {
			}
			else Environment()->items_washing.push_back(make_pair(items[i].rarity, i));
		}
		items[3938].properties = Property_AutoPickup;
		items[9960].properties = Property_AutoPickup;
		items[9946].properties = Property_AutoPickup;
		items[9948].properties = Property_AutoPickup;
		items[10358].properties = Property_AutoPickup;
		sort(Environment()->zombieitem.begin(), Environment()->zombieitem.end());
		for (int i = 0; i < Environment()->zombieitem.size(); i++) Environment()->zombie_list += "\nadd_button_with_icon|zomb_price_" + to_string(Environment()->zombieitem[i].second) + "|" + Set_Count(Environment()->zombieitem[i].first) + "ZB|noflags|" + to_string(Environment()->zombieitem[i].second) + "||";
		sort(Environment()->surgeryitem.begin(), Environment()->surgeryitem.end());
		for (int i = 0; i < Environment()->surgeryitem.size(); i++) Environment()->surgery_list += "\nadd_button_with_icon|zurg_price_" + to_string(Environment()->surgeryitem[i].second) + "|" + Set_Count(Environment()->surgeryitem[i].first) + "Cd|noflags|" + to_string(Environment()->surgeryitem[i].second) + "||";
		sort(Environment()->wolfitem.begin(), Environment()->wolfitem.end());
		reverse(Environment()->wolfitem.begin(), Environment()->wolfitem.end());
		for (int i = 0; i < Environment()->wolfitem.size(); i++) Environment()->wolf_list += "\nadd_button_with_icon|wolf_price_" + to_string(Environment()->wolfitem[i].second) + "|" + Set_Count(Environment()->wolfitem[i].first) + "Wt|noflags|" + to_string(Environment()->wolfitem[i].second) + "||";
		return 0;
	}
};